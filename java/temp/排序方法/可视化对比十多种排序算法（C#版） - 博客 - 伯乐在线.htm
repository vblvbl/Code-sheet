<!DOCTYPE html>
<!-- saved from url=(0030)http://blog.jobbole.com/72850/ -->
<html lang="zh-CN" prefix="og: http://ogp.me/ns#" xmlns:wb="http://open.weibo.com/wb" class=" js rgba borderradius boxshadow textshadow opacity cssanimations cssgradients csstransitions fontface generatedcontent video audio js"><!--<![endif]--><!-- BEGIN head --><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><div class="fit-vids-style">­<style>               .fluid-width-video-wrapper {                 width: 100%;                              position: relative;                       padding: 0;                            }                                                                                   .fluid-width-video-wrapper iframe,        .fluid-width-video-wrapper object,        .fluid-width-video-wrapper embed {           position: absolute;                       top: 0;                                   left: 0;                                  width: 100%;                              height: 100%;                          }                                       </style></div><script type="text/javascript" async="" src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/ga.js"></script><script src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/shares.php" charset="utf-8"></script>

	<!-- Title -->
	<title>可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线</title>
	
	<!-- Meta Tags -->
	
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	
	<!-- Favicon & Mobileicon -->
	<link rel="shortcut icon" href="http://jbcdn2.b0.upaiyun.com/2013/12/favicon.png">
	<link rel="apple-touch-icon" href="http://jbcdn2.b0.upaiyun.com/2013/12/jobbole-blog-logo-mobile.png">
	
	<!-- RSS, Atom & Pingbacks -->
		<link rel="alternate" title="博客 – 伯乐在线 RSS Feed" href="http://blog.jobbole.com/feed/">
		<link rel="alternate" title="RSS .92" href="http://blog.jobbole.com/feed/rss/">
	<link rel="alternate" title="Atom 0.3" href="http://blog.jobbole.com/feed/atom/">
	<link rel="pingback" href="http://blog.jobbole.com/xmlrpc.php">
	
	<!-- Theme Hook -->
	
<!-- This site is optimized with the Yoast WordPress SEO plugin v1.4.13 - http://yoast.com/wordpress/seo/ -->
<meta name="description" content="排序算法是一种能将一串数据依照特定排序方式进行排列的一种算法。最常用到的排序方式是数值顺序以及字典顺序。在这篇文章中，我会向大家展示一些排序算法的可视化过程。我还写了一个工具，大家可对比查看某两种排序算法。">
<link rel="canonical" href="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线.htm">
<meta property="og:locale" content="zh_CN">
<meta property="og:type" content="article">
<meta property="og:title" content="可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线">
<meta property="og:description" content="排序算法是一种能将一串数据依照特定排序方式进行排列的一种算法。最常用到的排序方式是数值顺序以及字典顺序。在这篇文章中，我会向大家展示一些排序算法的可视化过程。我还写了一个工具，大家可对比查看某两种排序算法。">
<meta property="og:url" content="http://blog.jobbole.com/72850/">
<meta property="og:site_name" content="博客 - 伯乐在线">
<meta property="og:image" content="http://ww3.sinaimg.cn/mw690/7cc829d3gw1ei278e9zlpg205k05kq8u.gif">
<meta property="og:image" content="http://ww3.sinaimg.cn/mw690/7cc829d3gw1ei27ukg2h8g205k05kq8c.gif">
<meta property="og:image" content="http://ww1.sinaimg.cn/mw690/7cc829d3gw1ei28gyu0uyg205k05kq4e.gif">
<meta property="og:image" content="http://ww1.sinaimg.cn/mw690/7cc829d3gw1ei28hey2leg205k05kgmm.gif">
<meta property="og:image" content="http://ww3.sinaimg.cn/mw690/7cc829d3gw1ei28uk3lomg205k05kdl6.gif">
<meta property="og:image" content="http://ww2.sinaimg.cn/mw690/7cc829d3gw1ei28xsnnvrg205k05kwjz.gif">
<meta property="og:image" content="http://ww3.sinaimg.cn/mw690/7cc829d3gw1ei28zp9aslg205k05kn3t.gif">
<meta property="og:image" content="http://ww2.sinaimg.cn/mw690/7cc829d3gw1ei297wbvz5g205k05kn4a.gif">
<meta property="og:image" content="http://ww4.sinaimg.cn/mw690/7cc829d3gw1ei29a0lfxzg205k05kwk4.gif">
<meta property="og:image" content="http://ww3.sinaimg.cn/mw690/7cc829d3gw1ei29b0q4fzg205k05k3zt.gif">
<meta property="og:image" content="http://ww3.sinaimg.cn/mw690/7cc829d3gw1ei29dap69sg205k05kmzc.gif">
<meta property="og:image" content="http://ww4.sinaimg.cn/mw690/7cc829d3gw1ei29e41wcdg205k05kjsb.gif">
<meta property="og:image" content="http://ww1.sinaimg.cn/mw690/7cc829d3gw1ei29fngrabg205k05kter.gif">
<!-- / Yoast WordPress SEO plugin. -->

<link rel="stylesheet" id="v48fv_images-css" href="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/images.css" type="text/css" media="all">
<link rel="stylesheet" id="v48fv_front-css" href="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/front.css" type="text/css" media="all">
<link rel="stylesheet" id="v48fv_common-css" href="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/common.css" type="text/css" media="all">
<link rel="stylesheet" id="bbp-default-bbpress-css" href="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/bbpress.css" type="text/css" media="screen">
<link rel="stylesheet" id="bp-legacy-css-css" href="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/buddypress.css" type="text/css" media="screen">
<link rel="stylesheet" id="wp-polls-css" href="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/polls-css.css" type="text/css" media="all">
<link rel="stylesheet" id="bpbbpst-bbpress-widget-css-css" href="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/bpbbpst-bbpress-widget.css" type="text/css" media="all">
<link rel="stylesheet" id="core3.0-css" href="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/shCore.css" type="text/css" media="all">
<link rel="stylesheet" id="core-Default3.0-css" href="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/shCoreDefault.css" type="text/css" media="all">
<link rel="stylesheet" id="theme-Default3.0-css" href="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/shThemeDefault.css" type="text/css" media="all">
<link rel="stylesheet" id="lightboxStyle-css" href="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/colorbox.css" type="text/css" media="screen">
<script async="" type="text/javascript" src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/ca-pub-7056282119617872.js"></script><script type="text/javascript" src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/jquery.js"></script>
<script type="text/javascript">
/* <![CDATA[ */
var BP_DTheme = {"my_favs":"\u6211\u7684\u6536\u85cf","accepted":"\u5df2\u63a5\u53d7","rejected":"\u5df2\u62d2\u7edd","show_all_comments":"\u663e\u793a\u8be5\u8bdd\u9898\u6240\u6709\u8bc4\u8bba","show_all":"\u663e\u793a\u5168\u90e8","comments":"\u8bc4\u8bba","close":"\u5173\u95ed","view":"\u67e5\u770b","mark_as_fav":"\u6536\u85cf","remove_fav":"\u79fb\u9664\u6536\u85cf"};
/* ]]> */
</script>
<script type="text/javascript" src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/buddypress.js"></script>
<script type="text/javascript" src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/comment-reply.min.js"></script>
<script type="text/javascript" src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/modernizr.js"></script>
<script type="text/javascript" src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/rc-textarea-hl.js"></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://blog.jobbole.com/xmlrpc.php?rsd">
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://blog.jobbole.com/wp-includes/wlwmanifest.xml"> 
<link rel="shortlink" href="http://blog.jobbole.com/?p=72850">

		<script type="text/javascript">
			/* <![CDATA[ */
			
						jQuery(document).ready( function() {

				/* Use backticks instead of <code> for the Code button in the editor */
				if ( typeof( edButtons ) !== 'undefined' ) {
					edButtons[110] = new QTags.TagButton( 'code', 'code', '`', '`', 'c' );
					QTags._buttonsInit();
				}

				/* Tab from topic title */
				jQuery( '#bbp_topic_title' ).bind( 'keydown.editor-focus', function(e) {
					if ( e.which !== 9 )
						return;

					if ( !e.ctrlKey && !e.altKey && !e.shiftKey ) {
						if ( typeof( tinymce ) !== 'undefined' ) {
							if ( ! tinymce.activeEditor.isHidden() ) {
								var editor = tinymce.activeEditor.editorContainer;
								jQuery( '#' + editor + ' td.mceToolbar > a' ).focus();
							} else {
								jQuery( 'textarea.bbp-the-content' ).focus();
							}
						} else {
							jQuery( 'textarea.bbp-the-content' ).focus();
						}

						e.preventDefault();
					}
				});

				/* Shift + tab from topic tags */
				jQuery( '#bbp_topic_tags' ).bind( 'keydown.editor-focus', function(e) {
					if ( e.which !== 9 )
						return;

					if ( e.shiftKey && !e.ctrlKey && !e.altKey ) {
						if ( typeof( tinymce ) !== 'undefined' ) {
							if ( ! tinymce.activeEditor.isHidden() ) {
								var editor = tinymce.activeEditor.editorContainer;
								jQuery( '#' + editor + ' td.mceToolbar > a' ).focus();
							} else {
								jQuery( 'textarea.bbp-the-content' ).focus();
							}
						} else {
							jQuery( 'textarea.bbp-the-content' ).focus();
						}

						e.preventDefault();
					}
				});
			});
						/* ]]> */
		</script>

	
	<script type="text/javascript">var ajaxurl = 'http://blog.jobbole.com/wp-admin/admin-ajax.php';</script>


<!-- Comment Rating plugin Version: 2.9.32 by Bob King, http://wealthynetizen.com/, dynamic comment voting & styling. --> 
<style type="text/css" media="screen">
   .ckrating_highly_rated {background-color:#FFFFCC !important;}
   .ckrating_poorly_rated {opacity:0.6;filter:alpha(opacity=60) !important;}
   .ckrating_hotly_debated {background-color:#FFF0F5 !important;}
</style>

<script type="text/javascript">
	window._wp_rp_static_base_url = 'http://dtmvdvtzf8rz0.cloudfront.net/static/';
	window._wp_rp_wp_ajax_url = "http://blog.jobbole.com/wp-admin/admin-ajax.php";
	window._wp_rp_plugin_version = '2.8';
	window._wp_rp_post_id = '72850';
	window._wp_rp_num_rel_posts = '10';
</script>
<style type="text/css">
.wp-polls .pollbar {
	margin: 1px;
	font-size: 6px;
	line-height: 8px;
	height: 8px;
	background: #0CA3C4;
	border: 1px solid #fff;
}
</style>

<!-- WP SyntaxHighlighter Ver.1.7.3 CSS for code Begin -->
<style type="text/css">
.syntaxhighlighter,
.syntaxhighlighter a,
.syntaxhighlighter div,
.syntaxhighlighter code,
.syntaxhighlighter table,
.syntaxhighlighter table td,
.syntaxhighlighter table tr,
.syntaxhighlighter table tbody,
.syntaxhighlighter table thead,
.syntaxhighlighter table caption,
.syntaxhighlighter textarea {
font-size: 12px !important; /* Set the font size in pixels */  
font-family: "Consolas", "Bitstream Vera Sans Mono", "Courier New", Courier, monospace !important; /* Set the font type */  
}
.syntaxhighlighter table caption {
/* For Title(Caption) */  
font-size: 14px !important; /* Set the font size in pixels */  
font-family: "Consolas", "Bitstream Vera Sans Mono", "Courier New", Courier, monospace !important; /* Set the font type */  
}
.syntaxhighlighter.nogutter td.code .line {
/* Set the left padding space when no-gutter in ver. 3.0 */  
padding-left: 3px !important;
}
.syntaxhighlighter {
/* For Chrome/Safari(WebKit) */  
/* Hide the superfluous vertical scrollbar in ver. 3.0 */  
overflow-y: hidden !important;
padding: 1px !important;
}
.widget-area.syntaxhighlighter a,
.widget-area.syntaxhighlighter div,
.widget-area.syntaxhighlighter code,
.widget-area.syntaxhighlighter table,
.widget-area.syntaxhighlighter table td,
.widget-area.syntaxhighlighter table tr,
.widget-area.syntaxhighlighter table tbody,
.widget-area.syntaxhighlighter table thead,
.widget-area.syntaxhighlighter table caption,
.widget-area.syntaxhighlighter textarea {
/* For Widget */  
font-size: 14px !important; /* Set the font size in pixels */  
font-family: "Consolas", "Bitstream Vera Sans Mono", "Courier New", Courier, monospace !important; /* Set the font type */  
}
.widget-area table caption {
/* For Widget */  
/* For Title(Caption) */  
font-size: 10px !important; /* Set the font size in pixels */  
font-family: "Consolas", "Bitstream Vera Sans Mono", "Courier New", Courier, monospace !important; /* Set the font type */  
}
</style>
<!-- WP SyntaxHighlighter Ver.1.7.3 CSS for code End -->
	
	<!-- CSS -->
	<link rel="stylesheet" href="http://blog.jobbole.com/wp-content/themes/jobboleblogv3/style.css" media="screen">
	<!-- link rel="stylesheet" href="http://fonts.googleapis.com/css?family=Noticia+Text:400,700italic,700,400italic" media="screen" / -->
	<style>
				*::selection { background: #0099cc; }
		*::-moz-selection { background: #0099cc; }
		body { background: #ffffff  }
		a, .tabs ul.nav li a:hover, .tabs ul.nav li.active a, .dropcap, .toggle.hover .toggle-title, li.comment cite a:hover, h3.widget-title, .post-meta .meta-title:hover, .the-latest a:hover h4, .aw_socialcounter_widget li a:hover, .aw_tabbed_widget #tab-latest-comments a:hover { color: #0099cc; }
		a:hover { color: #b30000; }
		input:focus, textarea:focus { border-color: #0099cc; }
		#searchsubmit, .highlight, .aw_tabbed_widget .tabs ul.nav li.active a, footer .aw_tabbed_widget .tabs ul.nav li.active a, #top .aw_tabbed_widget .tabs ul.nav li.active a, .aw_tabbed_widget .tabs ul.nav li a:hover, footer .aw_tabbed_widget .tabs ul.nav li a:hover, #top .aw_tabbed_widget .tabs ul.nav li a:hover, .aw_twitter_widget .twitter-icon, .testimonial-icon, #top-closed:hover, .flex-control-nav a:hover, .flex-control-nav a.flex-active { background-color: #0099cc; }
		.submit { background-color: #0099cc; border-color: #007399; }
		.submit:hover { background-color: #b30000; border-color: #860000; }
		#searchsubmit:hover { background-color: #b30000; }
		.toggle.hover .toggle-icon { border-top-color: #0099cc; }
		.toggle.hover.active .toggle-icon { border-bottom-color: #0099cc; }
		.flex-direction-nav li .flex-prev:hover { border-right-color: #0099cc; }
		.flex-direction-nav li .flex-next:hover { border-left-color: #0099cc; }
		@media only screen and (min-width: 768px) and (max-width: 959px) {
			.aw_tabbed_widget .tabs ul.nav li a:hover, .tabs ul.nav li.active a { color: #0099cc; }
		}
		@media screen and (max-width: 767px) {
			.tabs ul.nav li a:hover, .tabs ul.nav li.active a { color: #0099cc; }
		}
	</style>
		
	<!--[if IE 8]>
		<script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
		<script src="http://ie7-js.googlecode.com/svn/version/2.1(beta4)/IE9.js"></script>
    <![endif]-->

	<!-- Links: RSS + Atom Syndication + Pingback etc. -->
	<link rel="alternate" type="application/rss+xml" title="博客 – 伯乐在线 RSS Feed" href="http://blog.jobbole.com/feed/">
	<link rel="alternate" type="text/xml" title="RSS .92" href="http://blog.jobbole.com/feed/rss/">
	<link rel="alternate" type="application/atom+xml" title="Atom 0.3" href="http://blog.jobbole.com/feed/atom/">
	<link rel="pingback" href="http://blog.jobbole.com/xmlrpc.php">

<!-- END head -->
</head>

<!-- BEGIN body -->
<body class="single single-post postid-72850 single-format-standard gecko js"><link href="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/jiathis_counter.css" rel="stylesheet" type="text/css"><script src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/jiathis.php" charset="utf-8"></script><link href="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/jiathis_share.css" rel="stylesheet" type="text/css"><iframe frameborder="0" style="position: absolute; display: none; opacity: 0;"></iframe><div class="jiathis_style" style="position: absolute; z-index: 1000000000; display: none; top: 50%; left: 50%; overflow: auto;"></div><div class="jiathis_style" style="position: absolute; z-index: 1000000000; display: none; overflow: auto;"></div><iframe frameborder="0" src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/jiathis_utility.htm" style="display: none;"></iframe>

		
	
	<!-- BEGIN #top-nav -->
	<nav id="top-nav" class="menu-nav">
		
		<!-- BEGIN .container -->
		<div class="container">

			<div class="grid-12"><ul id="menu-main-menu" class="menu sf-js-enabled"><li id="menu-item-46856" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-46856"><a href="http://top.jobbole.com/">头条</a></li>
<li id="menu-item-46858" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-46858"><a href="http://www.jobbole.com/groups">小组</a></li>
<li id="menu-item-46860" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-46860"><a href="http://hao.jobbole.com/">资源</a></li>
<li id="menu-item-46861" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-46861"><a href="http://www.jobbole.com/register">注册</a></li>
<li id="menu-item-46862" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-46862"><a href="http://www.jobbole.com/wp-login.php">登录</a></li>
</ul></div>				
			<div class="clear"></div>
		
		</div>
		<!-- END .container -->
    
	</nav>
	<!-- END #top-nav -->
	
	  	
	<!-- BEGIN #wrapper -->
	<div id="wrapper" class="container">

		<!-- BEGIN header -->
		<header>
		
						
			<div class="header-wrapper">
								
				<!-- BEGIN #logo -->
				<div id="logo" class="leaderboard-true">
				
										<a href="http://blog.jobbole.com/"><img src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/jbblog-logo.png" width="137" height="85" alt="博客 – 伯乐在线"></a>
									
				</div>
				<!-- END #logo -->
				
				<!-- BEGIN #leaderboard -->
				<div id="leaderboard">
				
					<script async="" src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/adsbygoogle.js"></script>
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:90px" data-ad-client="ca-pub-7056282119617872" data-ad-slot="3173555691" data-adsbygoogle-status="done"><ins style="display:inline-table;border:none;height:90px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent"><ins id="aswift_0_anchor" style="display:block;border:none;height:90px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent"><iframe width="728" height="90" frameborder="0" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){try{h=s.upd(h,i)}catch(e){}w.location.replace(h)}}" id="aswift_0" name="aswift_0" style="left:0;position:absolute;top:0;"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>				
				</div>
				<!-- END #leaderboard -->
				
				<div class="clear"></div>
			
			</div>
			
						
			<div class="clear"></div>
			
			<!-- BEGIN #main-nav -->
			<nav id="main-nav" class="grid-12 menu-nav">

				<div class="menu-sub-menu-container"><ul id="main-nav-menu" class="menu sf-js-enabled"><li id="menu-item-33290" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-33290"><a href="http://blog.jobbole.com/">首页</a></li>
<li id="menu-item-33406" class="menu-item menu-item-type-post_type menu-item-object-page current_page_parent menu-item-33406"><a href="http://blog.jobbole.com/all-posts/">最新文章</a></li>
<li id="menu-item-70342" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-70342"><a href="http://blog.jobbole.com/category/online-courses/">在线课程</a></li>
<li id="menu-item-33325" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-33325"><a href="http://blog.jobbole.com/category/news/">业界</a></li>
<li id="menu-item-33319" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-33319"><a href="http://blog.jobbole.com/category/programmer/">开发</a></li>
<li id="menu-item-33313" class="menu-item menu-item-type-taxonomy menu-item-object-category current-post-ancestor current-menu-parent current-post-parent menu-item-33313"><a href="http://blog.jobbole.com/category/it-tech/">IT技术</a>
<ul class="sub-menu sf-js-enabled" style="display: none; visibility: hidden;">
	<li id="menu-item-55604" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-55604"><a href="http://blog.jobbole.com/tag/linux/">Linux</a></li>
	<li id="menu-item-55607" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-55607"><a href="http://blog.jobbole.com/tag/unix/">UNIX</a></li>
	<li id="menu-item-55605" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-55605"><a href="http://blog.jobbole.com/tag/mysql/">MySQL</a></li>
	<li id="menu-item-55621" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-55621"><a href="http://blog.jobbole.com/tag/nosql/">NoSQL</a></li>
	<li id="menu-item-55622" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-55622"><a href="http://blog.jobbole.com/tag/%E6%95%B0%E6%8D%AE%E5%BA%93/">数据库</a></li>
	<li id="menu-item-55606" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-55606"><a href="http://blog.jobbole.com/tag/git/">Git</a></li>
	<li id="menu-item-55635" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-55635"><a href="http://blog.jobbole.com/tag/%E7%AE%97%E6%B3%95/">算法</a></li>
	<li id="menu-item-55612" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-55612"><a href="http://blog.jobbole.com/tag/%e6%b5%8b%e8%af%95/">测试</a></li>
	<li id="menu-item-55618" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-55618"><a href="http://blog.jobbole.com/tag/%e5%ae%89%e5%85%a8/">信息安全</a></li>
	<li id="menu-item-55636" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-55636"><a href="http://blog.jobbole.com/tag/vim/">Vim</a></li>
</ul>
</li>
<li id="menu-item-33323" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-33323"><a href="http://blog.jobbole.com/category/design/">设计</a>
<ul class="sub-menu sf-js-enabled" style="display: none; visibility: hidden;">
	<li id="menu-item-55610" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-55610"><a href="http://blog.jobbole.com/tag/%e7%bd%91%e9%a1%b5%e8%ae%be%e8%ae%a1/">网页设计</a></li>
	<li id="menu-item-55608" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-55608"><a href="http://blog.jobbole.com/tag/ui/">UI设计</a></li>
	<li id="menu-item-55609" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-55609"><a href="http://blog.jobbole.com/tag/%e4%ba%a4%e4%ba%92%e8%ae%be%e8%ae%a1/">交互设计</a></li>
	<li id="menu-item-55611" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-55611"><a href="http://blog.jobbole.com/tag/%e7%94%a8%e6%88%b7%e4%bd%93%e9%aa%8c/">用户体验</a></li>
</ul>
</li>
<li id="menu-item-33317" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-33317"><a href="http://blog.jobbole.com/category/startup/">创业</a></li>
<li id="menu-item-33390" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-33390"><a href="http://blog.jobbole.com/category/career/">IT职场</a></li>
<li id="menu-item-56110" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-56110"><a href="http://blog.jobbole.com/category/overseas/">在国外</a></li>
<li id="menu-item-59536" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-59536"><a href="http://blog.jobbole.com/72850/#">频道</a>
<ul class="sub-menu sf-js-enabled" style="display: none; visibility: hidden;">
	<li id="menu-item-57230" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-57230"><a href="http://blog.jobbole.com/category/webfront/">Web前端</a></li>
	<li id="menu-item-56557" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-56557"><a href="http://blog.jobbole.com/category/ios/">iOS</a></li>
	<li id="menu-item-59344" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-59344"><a href="http://blog.jobbole.com/category/android/">Android</a></li>
	<li id="menu-item-56965" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-56965"><a href="http://blog.jobbole.com/category/python/">Python</a></li>
	<li id="menu-item-53194" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-53194"><a href="http://www.importnew.com/">Java</a></li>
	<li id="menu-item-57616" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-57616"><a href="http://blog.jobbole.com/category/c-cpp/">C/C++</a></li>
	<li id="menu-item-57003" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-57003"><a href="http://blog.jobbole.com/category/php-programmer/">PHP</a></li>
	<li id="menu-item-55603" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-55603"><a href="http://blog.jobbole.com/tag/ruby/">Ruby</a></li>
	<li id="menu-item-70347" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-70347"><a href="http://blog.jobbole.com/tag/go/">Go</a></li>
</ul>
</li>
<li id="menu-item-33388" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-33388"><a href="http://blog.jobbole.com/category/other/">更多 &gt;</a>
<ul class="sub-menu sf-js-enabled" style="display: none; visibility: hidden;">
	<li id="menu-item-56094" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-56094"><a href="http://blog.jobbole.com/category/interview/">访谈</a></li>
	<li id="menu-item-56111" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-56111"><a href="http://blog.jobbole.com/tag/featuredpost/">经典回顾</a></li>
	<li id="menu-item-33665" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-33665"><a href="http://blog.jobbole.com/category/humor-comic/">趣文</a></li>
	<li id="menu-item-33321" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-33321"><a href="http://blog.jobbole.com/category/freelance/">自由职业</a></li>
	<li id="menu-item-33408" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-33408"><a href="http://blog.jobbole.com/category/resources/">工具与资源</a></li>
	<li id="menu-item-33407" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-33407"><a href="http://blog.jobbole.com/category/books/">书籍与教程</a></li>
</ul>
</li>
</ul><select class="selectnav" id="selectnav1"><option value="">- 导航条 -</option><option value="http://blog.jobbole.com/">首页</option><option value="http://blog.jobbole.com/all-posts/">最新文章</option><option value="http://blog.jobbole.com/category/online-courses/">在线课程</option><option value="http://blog.jobbole.com/category/news/">业界</option><option value="http://blog.jobbole.com/category/programmer/">开发</option><option value="http://blog.jobbole.com/category/it-tech/">IT技术</option><option value="http://blog.jobbole.com/tag/linux/">- Linux</option><option value="http://blog.jobbole.com/tag/unix/">- UNIX</option><option value="http://blog.jobbole.com/tag/mysql/">- MySQL</option><option value="http://blog.jobbole.com/tag/nosql/">- NoSQL</option><option value="http://blog.jobbole.com/tag/%E6%95%B0%E6%8D%AE%E5%BA%93/">- 数据库</option><option value="http://blog.jobbole.com/tag/git/">- Git</option><option value="http://blog.jobbole.com/tag/%E7%AE%97%E6%B3%95/">- 算法</option><option value="http://blog.jobbole.com/tag/%e6%b5%8b%e8%af%95/">- 测试</option><option value="http://blog.jobbole.com/tag/%e5%ae%89%e5%85%a8/">- 信息安全</option><option value="http://blog.jobbole.com/tag/vim/">- Vim</option><option value="http://blog.jobbole.com/category/design/">设计</option><option value="http://blog.jobbole.com/tag/%e7%bd%91%e9%a1%b5%e8%ae%be%e8%ae%a1/">- 网页设计</option><option value="http://blog.jobbole.com/tag/ui/">- UI设计</option><option value="http://blog.jobbole.com/tag/%e4%ba%a4%e4%ba%92%e8%ae%be%e8%ae%a1/">- 交互设计</option><option value="http://blog.jobbole.com/tag/%e7%94%a8%e6%88%b7%e4%bd%93%e9%aa%8c/">- 用户体验</option><option value="http://blog.jobbole.com/category/startup/">创业</option><option value="http://blog.jobbole.com/category/career/">IT职场</option><option value="http://blog.jobbole.com/category/overseas/">在国外</option><option value="http://blog.jobbole.com/72850/#">频道</option><option value="http://blog.jobbole.com/category/webfront/">- Web前端</option><option value="http://blog.jobbole.com/category/ios/">- iOS</option><option value="http://blog.jobbole.com/category/android/">- Android</option><option value="http://blog.jobbole.com/category/python/">- Python</option><option value="http://www.importnew.com/">- Java</option><option value="http://blog.jobbole.com/category/c-cpp/">- C/C++</option><option value="http://blog.jobbole.com/category/php-programmer/">- PHP</option><option value="http://blog.jobbole.com/tag/ruby/">- Ruby</option><option value="http://blog.jobbole.com/tag/go/">- Go</option><option value="http://blog.jobbole.com/category/other/">更多 &gt;</option><option value="http://blog.jobbole.com/category/interview/">- 访谈</option><option value="http://blog.jobbole.com/tag/featuredpost/">- 经典回顾</option><option value="http://blog.jobbole.com/category/humor-comic/">- 趣文</option><option value="http://blog.jobbole.com/category/freelance/">- 自由职业</option><option value="http://blog.jobbole.com/category/resources/">- 工具与资源</option><option value="http://blog.jobbole.com/category/books/">- 书籍与教程</option></select></div>				
				<div class="clear"></div>
            
			</nav>
			<!-- END #main-nav -->
			
			<div class="clear"></div>
		
		</header>
		<!-- END header -->
		
		<div id="breadcrumb" class="grid-12 margin-20"><div class="breadcrumb-wrapper"><!-- Breadcrumb NavXT 4.4.0 -->
<a title="Go to 伯乐在线." href="http://www.jobbole.com/" class="main-home">伯乐在线</a> &gt; <a href="http://blog.jobbole.com/" class="home">首页</a> &gt; <a href="http://blog.jobbole.com/all-posts/" class="post-root post-post">所有文章</a> &gt; <a href="http://blog.jobbole.com/category/it-tech/" class="category">IT技术</a> &gt; 可视化对比十多种排序算法（C#版）</div></div><div class="clear"></div>

<!-- BEGIN .grid-8 -->
<div class="grid-8">

		
	<!-- BEGIN .post -->
<div class="post-72850 post type-post status-publish format-standard hentry category-it-tech tag-1857 tag-650 odd" id="post-72850">
	
	<!-- BEGIN .entry-header -->
	<div class="entry-header">
	
				
		<h1>可视化对比十多种排序算法（C#版）</h1>
		
							
	</div>
	<!-- BEGIN .entry-header -->
	
	<!-- BEGIN .entry-meta -->
	<div class="entry-meta">
	
		<p class="entry-meta-hide-on-mobile">2014/07/07 | 分类： <a href="http://blog.jobbole.com/category/it-tech/" title="查看 IT技术 中的全部文章" rel="category tag">IT技术</a> | <a href="http://blog.jobbole.com/72850/#respond" title="《可视化对比十多种排序算法（C#版）》上的评论">0 条评论</a>

		 | 标签： <a href="http://blog.jobbole.com/tag/%e6%8e%92%e5%ba%8f%e7%ae%97%e6%b3%95/">排序算法</a>, <a href="http://blog.jobbole.com/tag/%e7%ae%97%e6%b3%95/">算法</a></p>
<!-- JiaThis Button BEGIN -->
<div class="jiathis_style" style="display: block; margin: 0 0px; clear: both;"><span class="jiathis_txt">分享到：</span>
<a class="jiathis_button_tsina" title="分享到新浪微博"><span class="jiathis_txt jtico jtico_tsina"></span></a>
<a class="jiathis_button_fb" title="分享到Facebook"><span class="jiathis_txt jtico jtico_fb"></span></a>
<a class="jiathis_button_weixin" title="分享到微信"><span class="jiathis_txt jtico jtico_weixin"></span></a>
<a class="jiathis_button_qzone" title="分享到QQ空间"><span class="jiathis_txt jtico jtico_qzone"></span></a>
<a class="jiathis_button_renren" title="分享到人人网"><span class="jiathis_txt jtico jtico_renren"></span></a>
<a class="jiathis_button_douban" title="分享到豆瓣"><span class="jiathis_txt jtico jtico_douban"></span></a>
<a class="jiathis_button_readitlater"></a>
<a class="jiathis_button_evernote" title="分享到EverNote"><span class="jiathis_txt jtico jtico_evernote"></span></a>
<a class="jiathis_button_ydnote" title="分享到有道云笔记"><span class="jiathis_txt jtico jtico_ydnote"></span></a>
<a href="http://www.jiathis.com/share?uid=1745061" class="jiathis jiathis_txt jiathis_separator jtico jtico_jiathis" target="_blank"></a>
<a class="jiathis_counter_style"><span class="jiathis_button_expanded jiathis_counter jiathis_bubble_style" id="jiathis_counter_66" title="累计分享46次">46</span></a>
</div>
<!-- JiaThis Button END -->


	</div>
	<!-- END .entry-meta -->

	<!-- BEGIN .entry -->
	<div class="entry">
					
		本文由 <a href="http://blog.jobbole.com/">伯乐在线</a> - <a href="http://blog.jobbole.com/author/s611785/">smilesisi</a> 翻译自 <a target="_blank" href="http://www.codeproject.com/articles/132757/visualization-and-comparison-of-sorting-algorithms">Kanasz Robert</a>。欢迎加入<a target="_blank" href="http://www.jobbole.com/groups/6/">技术翻译小组</a>。转载请参见文章末尾处的要求。<br><br>
<!-- div id="ad1">
<script type="text/javascript">
google_ad_client = "ca-pub-7056282119617872";
google_ad_slot = "6645040531";
google_ad_width = 300;
google_ad_height = 250;
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
<br/ -->

<p>在这篇文章中，我会向大家展示一些排序算法的可视化过程。我还写了一个工具，大家可对比查看某两种排序算法。</p>
<ul>
<li><a href="http://www.codeproject.com/KB/recipes/SortVisualization/SortComparison_src.zip" target="_blank">下载源码 – 75.7 KB</a></li>
<li><a href="http://www.codeproject.com/KB/recipes/SortVisualization/SortComparison_bin.zip" target="_blank">下载示例 – 27.1 KB</a></li>
</ul>
<h3>引言</h3>
<p>首先，我认为是最重要的是要理解什么是“排序算法”。根据维基百科，<b>排序算法</b>（Sorting algorithm）是一种能将一串数据依照特定排序方式进行排列的一种算法。最常用到的排序方式是数值顺序以及字典顺序。有效的排序算法在一些算法（例如搜索算法与合并算法）中是重要的，如此这些算法才能得到正确解答。排序算法也用在处理文字数据以及产生人类可读的输出结果。</p>
<p>接下来，我会说明一些算法。所有算法皆由C#代码实现，大部分的算法思想都可以在维基百科上找到。 所呈现的算法有：</p>
<ul>
<li>双向冒泡排序</li>
<li>冒泡排序</li>
<li>桶排序</li>
<li>梳排序</li>
<li>循环排序</li>
<li>地精排序</li>
<li>堆排序</li>
<li>插入排序</li>
<li>归并排序</li>
<li>奇偶排序</li>
<li>鸽笼排序</li>
<li>快速排序</li>
<li>使用冒泡的快排</li>
<li>选择排序</li>
<li>希尔排序</li>
</ul>
<p>我已经决定要创建GUI可视化的排序算法。该项目还允许用户保存为GIF图像及设置动画输出排序速度。</p>
<h3>使用代码</h3>
<p>该解决方案由两个项目组成。第一个项目称为组件提供的创建GIF动画图像类。该项目是基于NGIF项目的。关于这个项目的更多信息可以<a href="http://www.codeproject.com/KB/GDI-plus/NGif.aspx" target="_blank">在这里找到</a>。</p>
<p>第二个项目可以称为排序比较，它是解决方案的主要组成部分。其中，通过一个名为frmMain的结构可以选择排序算法，设置你想要排序，排序的速度，排序数量，并选择是否要创建动态图片。在窗体上放置两个面板称为pnlSort1和pnlSort2，其中分拣可视化的呈现方式。</p>
<p>每个算法都都通过自己的排序方式进行命名，并接受一个IList参数，并返回一个IList对象。</p>
<p>DrawSamples方法可以在面板上进行绘图。产生的随机样本之后就会调用它。通过点击随机按钮生成的样本会保存在数组中。</p>
<div><div id="highlighter_592064" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 keyword">private</code> <code class="actionscript3 keyword">void</code> <code class="actionscript3 plain">DrawSamples()</code></div><div class="line number2 index1 alt1"><code class="actionscript3 plain">{</code></div><div class="line number3 index2 alt2"><code class="actionscript3 spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="actionscript3 plain">g.Clear(Color.White);</code></div><div class="line number4 index3 alt1">&nbsp;</div><div class="line number5 index4 alt2"><code class="actionscript3 spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="actionscript3 keyword">for</code> <code class="actionscript3 plain">(</code><code class="actionscript3 keyword">int</code> <code class="actionscript3 plain">i = </code><code class="actionscript3 value">0</code><code class="actionscript3 plain">; i &lt; array.Count; i++)</code></div><div class="line number6 index5 alt1"><code class="actionscript3 spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="actionscript3 plain">{</code></div><div class="line number7 index6 alt2"><code class="actionscript3 spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="actionscript3 keyword">int</code> <code class="actionscript3 plain">x = (</code><code class="actionscript3 keyword">int</code><code class="actionscript3 plain">)(((double)pnlSamples.Width / array.Count) * i);</code></div><div class="line number8 index7 alt1">&nbsp;</div><div class="line number9 index8 alt2"><code class="actionscript3 spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="actionscript3 plain">Pen pen = </code><code class="actionscript3 keyword">new</code> <code class="actionscript3 plain">Pen(Color.Black);</code></div><div class="line number10 index9 alt1"><code class="actionscript3 spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="actionscript3 plain">g.DrawLine(pen, </code><code class="actionscript3 keyword">new</code> <code class="actionscript3 plain">Point(x, pnlSamples.Height), </code></div><div class="line number11 index10 alt2"><code class="actionscript3 spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="actionscript3 keyword">new</code> <code class="actionscript3 plain">Point(x, (</code><code class="actionscript3 keyword">int</code><code class="actionscript3 plain">)(pnlSamples.Height - (</code><code class="actionscript3 keyword">int</code><code class="actionscript3 plain">)array[i])));</code></div><div class="line number12 index11 alt1"><code class="actionscript3 spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="actionscript3 plain">}</code></div><div class="line number13 index12 alt2"><code class="actionscript3 plain">}</code></div></div></td></tr></tbody></table></div></div>
<p>该方法随机产生数据放于数组中。</p>
<div><div id="highlighter_704578" class="syntaxhighlighter notranslate csharp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="csharp keyword">public</code> <code class="csharp keyword">void</code> <code class="csharp plain">Randomize(IList list)</code></div><div class="line number2 index1 alt1"><code class="csharp plain">{</code></div><div class="line number3 index2 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">for</code> <code class="csharp plain">(</code><code class="csharp keyword">int</code> <code class="csharp plain">i = list.Count - 1; i &gt; 0; i--)</code></div><div class="line number4 index3 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div><div class="line number5 index4 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">int</code> <code class="csharp plain">swapIndex = rng.Next(i + 1);</code></div><div class="line number6 index5 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code> <code class="csharp plain">(swapIndex != i)</code></div><div class="line number7 index6 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div><div class="line number8 index7 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">object</code> <code class="csharp plain">tmp = list[swapIndex];</code></div><div class="line number9 index8 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">list[swapIndex] = list[i];</code></div><div class="line number10 index9 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">list[i] = tmp;</code></div><div class="line number11 index10 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div><div class="line number12 index11 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div><div class="line number13 index12 alt2"><code class="csharp plain">}</code></div></div></td></tr></tbody></table></div></div>
<p>在排序过程中，当复选框创建的动画被选中，数组中两个数交换的话就会产生图像。此图像索引从0到n，其中n代表交换的次数。</p>
<div><div id="highlighter_856471" class="syntaxhighlighter notranslate csharp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="csharp keyword">private</code> <code class="csharp keyword">void</code> <code class="csharp plain">SavePicture()</code></div><div class="line number2 index1 alt1"><code class="csharp plain">{</code></div><div class="line number3 index2 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">ImageCodecInfo myImageCodecInfo = </code><code class="csharp keyword">this</code><code class="csharp plain">.getEncoderInfo(</code><code class="csharp string">"image/gif"</code><code class="csharp plain">); </code></div><div class="line number4 index3 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">EncoderParameter myEncoderParameter = </code><code class="csharp keyword">new</code> <code class="csharp plain">EncoderParameter(</code></div><div class="line number5 index4 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">System.Drawing.Imaging.Encoder.Compression, (</code><code class="csharp keyword">long</code><code class="csharp plain">)EncoderValue.CompressionLZW);</code></div><div class="line number6 index5 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">EncoderParameter qualityParam = </code></div><div class="line number7 index6 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">new</code> <code class="csharp plain">EncoderParameter(System.Drawing.Imaging.Encoder.Quality, 0L);</code></div><div class="line number8 index7 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">EncoderParameters myEncoderParameters = </code><code class="csharp keyword">new</code> <code class="csharp plain">EncoderParameters(1);</code></div><div class="line number9 index8 alt2">&nbsp;</div><div class="line number10 index9 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">EncoderParameters encoderParams = </code><code class="csharp keyword">new</code> <code class="csharp plain">EncoderParameters(2);</code></div><div class="line number11 index10 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">encoderParams.Param[0] = qualityParam;</code></div><div class="line number12 index11 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">encoderParams.Param[1] = myEncoderParameter;</code></div><div class="line number13 index12 alt2">&nbsp;</div><div class="line number14 index13 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">string</code> <code class="csharp plain">destPath = </code></div><div class="line number15 index14 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">System.IO.Path.Combine(txtOutputFolder.Text, imgCount + </code><code class="csharp string">".gif"</code><code class="csharp plain">);</code></div><div class="line number16 index15 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">bmpsave.Save(destPath, myImageCodecInfo, encoderParams);</code></div><div class="line number17 index16 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">imgCount++;</code></div><div class="line number18 index17 alt1"><code class="csharp plain">}</code></div></div></td></tr></tbody></table></div></div>
<h3>排序算法</h3>
<h4><a href="http://zh.wikipedia.org/wiki/%E6%B0%A3%E6%B3%A1%E6%8E%92%E5%BA%8F" target="_blank">冒泡排序</a></h4>
<p><img alt="" src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/7cc829d3gw1ei278e9zlpg205k05kq8u.gif"></p>
<p>冒泡排序也被称为下沉排序，是一个简单的排序算法，通过多次重复比较每对相邻的元素，并按规定的顺序交换他们，最终把数列进行排好序。一直重复下去，直到结束。该算法得名于较小元素“气泡”会“浮到”列表顶部。由于只使用了比较操作，所以这是一个比较排序。</p>
<p>冒泡排序算法的运作如下：</p>
<ol>
<li>比较相邻的元素。如果第一个比第二个大，就交换他们两个。</li>
<li>对每一对相邻元素作同样的工作，从开始第一对到结尾的最后一对。这步做完后，最后的元素会是最大的数。</li>
<li>针对所有的元素重复以上的步骤，除了最后一个。</li>
<li>持续每次对越来越少的元素重复上面的步骤，直到没有任何一对数字需要比较。</li>
</ol>
<p>由于它的简洁，冒泡排序通常被用来对于程序设计入门的学生介绍算法的概念。但同样简单的插入排序比冒泡排序性能更好，所以有些人认为不需要再教冒泡排序了。</p>
<p>&nbsp;</p>
<div><div id="highlighter_300467" class="syntaxhighlighter notranslate csharp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="csharp keyword">public</code> <code class="csharp plain">IList BubbleSort(IList arrayToSort)</code></div><div class="line number2 index1 alt1"><code class="csharp plain">{</code></div><div class="line number3 index2 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">int</code> <code class="csharp plain">n = arrayToSort.Count - 1;</code></div><div class="line number4 index3 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">for</code> <code class="csharp plain">(</code><code class="csharp keyword">int</code> <code class="csharp plain">i = 0; i &lt; n; i++)</code></div><div class="line number5 index4 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div><div class="line number6 index5 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">for</code> <code class="csharp plain">(</code><code class="csharp keyword">int</code> <code class="csharp plain">j = n; j &gt; i; j--)</code></div><div class="line number7 index6 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div><div class="line number8 index7 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code> <code class="csharp plain">(((IComparable)arrayToSort[j - 1]).CompareTo(arrayToSort[j]) &gt; 0)</code></div><div class="line number9 index8 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div><div class="line number10 index9 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">object</code> <code class="csharp plain">temp = arrayToSort[j - 1];</code></div><div class="line number11 index10 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">arrayToSort[j - 1] = arrayToSort[j];</code></div><div class="line number12 index11 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">arrayToSort[j] = temp;</code></div><div class="line number13 index12 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">RedrawItem(j);</code></div><div class="line number14 index13 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">RedrawItem(j - 1);</code></div><div class="line number15 index14 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">pnlSamples.Refresh();</code></div><div class="line number16 index15 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code> <code class="csharp plain">(chkCreateAnimation.Checked)</code></div><div class="line number17 index16 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">SavePicture();</code></div><div class="line number18 index17 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div><div class="line number19 index18 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div><div class="line number20 index19 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div><div class="line number21 index20 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">return</code> <code class="csharp plain">arrayToSort;</code></div><div class="line number22 index21 alt1"><code class="csharp plain">}</code></div></div></td></tr></tbody></table></div></div>
<table class="ArticleTable">
<tbody>
<tr>
<td align="right"><strong>Worst case performance:</strong></td>
<td>O(n<sup>2</sup>)</td>
</tr>
<tr>
<td align="right"><strong>Best case performance:</strong></td>
<td>O(n)</td>
</tr>
<tr>
<td align="right"><strong>Average case performance:</strong></td>
<td>O(n<sup>2</sup>)</td>
</tr>
<tr>
<td align="right"><strong>Worst case space complexity:</strong></td>
<td>O(1) auxiliary</td>
</tr>
</tbody>
</table>
<h4><a href="http://zh.wikipedia.org/wiki/%E9%B8%A1%E5%B0%BE%E9%85%92%E6%8E%92%E5%BA%8F" target="_blank">双向冒泡排序</a></h4>
<p><img alt="" src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/7cc829d3gw1ei27ukg2h8g205k05kq8c.gif"></p>
<p>鸡尾酒排序，也称为双向冒泡排序、调酒器排序、搅拌排序（可以参考选择排序的一个变种）、纹波排序、接送排序，或欢乐时光排序。它由冒泡排序变化而来，是一种稳定的比较排序算法。该算法不同于冒泡排序，它在排序上由两个方向同时进行。该排序算法只是比冒泡排序稍难实现，但解决了冒泡排序中的“乌龟问题”（数组尾部的小值）。<span style="color: #ff0000;"><br>
</span></p>
<p>首先从左向右方向为大元素移动方向，从右向左方向为小元素移动方向，然后每个元素都依次执行。在第 i 次移动后，前 i 个元素和后个 i 元素都放到了正确的位置，也不需要在检查一次。每次缩短已排序的那部分列表，都可以减半操作次数。</p>
<p>但是在乱数序列的状态下，双向冒泡排序与冒泡排序的效率都很差劲。</p>
<div><div id="highlighter_559294" class="syntaxhighlighter notranslate csharp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div><div class="line number26 index25 alt1">26</div><div class="line number27 index26 alt2">27</div><div class="line number28 index27 alt1">28</div><div class="line number29 index28 alt2">29</div><div class="line number30 index29 alt1">30</div><div class="line number31 index30 alt2">31</div><div class="line number32 index31 alt1">32</div><div class="line number33 index32 alt2">33</div><div class="line number34 index33 alt1">34</div><div class="line number35 index34 alt2">35</div><div class="line number36 index35 alt1">36</div><div class="line number37 index36 alt2">37</div><div class="line number38 index37 alt1">38</div><div class="line number39 index38 alt2">39</div><div class="line number40 index39 alt1">40</div><div class="line number41 index40 alt2">41</div><div class="line number42 index41 alt1">42</div><div class="line number43 index42 alt2">43</div><div class="line number44 index43 alt1">44</div><div class="line number45 index44 alt2">45</div><div class="line number46 index45 alt1">46</div><div class="line number47 index46 alt2">47</div><div class="line number48 index47 alt1">48</div><div class="line number49 index48 alt2">49</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="csharp keyword">public</code> <code class="csharp plain">IList BiDerectionalBubleSort(IList arrayToSort) </code></div><div class="line number2 index1 alt1"><code class="csharp plain">{</code></div><div class="line number3 index2 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">int</code> <code class="csharp plain">limit = arrayToSort.Count;</code></div><div class="line number4 index3 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">int</code> <code class="csharp plain">st = -1;</code></div><div class="line number5 index4 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">bool</code> <code class="csharp plain">swapped = </code><code class="csharp keyword">false</code><code class="csharp plain">;</code></div><div class="line number6 index5 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">do</code></div><div class="line number7 index6 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div><div class="line number8 index7 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">swapped = </code><code class="csharp keyword">false</code><code class="csharp plain">;</code></div><div class="line number9 index8 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">st++;</code></div><div class="line number10 index9 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">limit--;</code></div><div class="line number11 index10 alt2">&nbsp;</div><div class="line number12 index11 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">for</code> <code class="csharp plain">(</code><code class="csharp keyword">int</code> <code class="csharp plain">j = st; j &lt; limit; j++)</code></div><div class="line number13 index12 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div><div class="line number14 index13 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code> <code class="csharp plain">(((IComparable)arrayToSort[j]).CompareTo(arrayToSort[j + 1]) &gt; 0)</code></div><div class="line number15 index14 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div><div class="line number16 index15 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">object</code> <code class="csharp plain">temp = arrayToSort[j];</code></div><div class="line number17 index16 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">arrayToSort[j] = arrayToSort[j + 1];</code></div><div class="line number18 index17 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">arrayToSort[j + 1] = temp;</code></div><div class="line number19 index18 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">swapped = </code><code class="csharp keyword">true</code><code class="csharp plain">;</code></div><div class="line number20 index19 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">RedrawItem(j);</code></div><div class="line number21 index20 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">RedrawItem(j + 1);</code></div><div class="line number22 index21 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">pnlSamples.Refresh();</code></div><div class="line number23 index22 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code><code class="csharp plain">(chkCreateAnimation.Checked)</code></div><div class="line number24 index23 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">SavePicture();</code></div><div class="line number25 index24 alt2">&nbsp;</div><div class="line number26 index25 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div><div class="line number27 index26 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div><div class="line number28 index27 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">for</code> <code class="csharp plain">(</code><code class="csharp keyword">int</code> <code class="csharp plain">j = limit - 1; j &gt;= st; j--)</code></div><div class="line number29 index28 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div><div class="line number30 index29 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code> <code class="csharp plain">(((IComparable)arrayToSort[j]).CompareTo(arrayToSort[j + 1]) &gt; 0)</code></div><div class="line number31 index30 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div><div class="line number32 index31 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">object</code> <code class="csharp plain">temp = arrayToSort[j];</code></div><div class="line number33 index32 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">arrayToSort[j] = arrayToSort[j + 1];</code></div><div class="line number34 index33 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">arrayToSort[j + 1] = temp;</code></div><div class="line number35 index34 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">swapped = </code><code class="csharp keyword">true</code><code class="csharp plain">;</code></div><div class="line number36 index35 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">RedrawItem(j);</code></div><div class="line number37 index36 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">RedrawItem(j + 1);</code></div><div class="line number38 index37 alt1">&nbsp;</div><div class="line number39 index38 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">pnlSamples.Refresh();</code></div><div class="line number40 index39 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code> <code class="csharp plain">(chkCreateAnimation.Checked)</code></div><div class="line number41 index40 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">SavePicture();</code></div><div class="line number42 index41 alt1">&nbsp;</div><div class="line number43 index42 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div><div class="line number44 index43 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div><div class="line number45 index44 alt2">&nbsp;</div><div class="line number46 index45 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">} </code><code class="csharp keyword">while</code> <code class="csharp plain">(st &lt; limit &amp;&amp; swapped);</code></div><div class="line number47 index46 alt2">&nbsp;</div><div class="line number48 index47 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">return</code> <code class="csharp plain">arrayToSort;</code></div><div class="line number49 index48 alt2"><code class="csharp plain">}</code></div></div></td></tr></tbody></table></div></div>
<table>
<tbody>
<tr>
<td align="right"><strong>Worst case performance:</strong></td>
<td>O(n<sup>2</sup>)</td>
</tr>
<tr>
<td align="right"><strong>Best case performance:</strong></td>
<td>O(n)</td>
</tr>
<tr>
<td align="right"><strong>Average case performance:</strong></td>
<td>O(n<sup>2</sup>)</td>
</tr>
<tr>
<td align="right"><strong>Worst case space complexity:</strong></td>
<td>O(1) auxiliary</td>
</tr>
</tbody>
</table>
<h4></h4>
<h4><a href="http://zh.wikipedia.org/wiki/%E6%A1%B6%E6%8E%92%E5%BA%8F" target="_blank">桶排序</a></h4>
<p>桶排序，或称为箱排序，是一种把数列划分成若干个桶的排序算法。在每个桶内各自排序，或者使用不同的排序算法，或通过递归方式继续使用桶排序算法。这是一个分布排序，是最能体现出数字意义的一种基数排序。桶排序是鸽巢排序的一种归纳结果。当要被排序的数组内的数值是均匀分配的时候，桶排序使用线性时间（Θ（<i>n</i>））。但桶排序并不是&nbsp;比较排序，他不受到 O(n log n) 下限的影响。</p>
<p>桶排序的流程：</p>
<ol>
<li>设置一个定量的数组当作空桶子。</li>
<li>寻访串行，并且把项目一个一个放到对应的桶子去。</li>
<li>对每个不是空的桶子进行排序。</li>
<li>从不是空的桶子里把项目再放回原来的串行中。</li>
</ol>
<div><div id="highlighter_814442" class="syntaxhighlighter notranslate csharp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div><div class="line number26 index25 alt1">26</div><div class="line number27 index26 alt2">27</div><div class="line number28 index27 alt1">28</div><div class="line number29 index28 alt2">29</div><div class="line number30 index29 alt1">30</div><div class="line number31 index30 alt2">31</div><div class="line number32 index31 alt1">32</div><div class="line number33 index32 alt2">33</div><div class="line number34 index33 alt1">34</div><div class="line number35 index34 alt2">35</div><div class="line number36 index35 alt1">36</div><div class="line number37 index36 alt2">37</div><div class="line number38 index37 alt1">38</div><div class="line number39 index38 alt2">39</div><div class="line number40 index39 alt1">40</div><div class="line number41 index40 alt2">41</div><div class="line number42 index41 alt1">42</div><div class="line number43 index42 alt2">43</div><div class="line number44 index43 alt1">44</div><div class="line number45 index44 alt2">45</div><div class="line number46 index45 alt1">46</div><div class="line number47 index46 alt2">47</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="csharp keyword">public</code> <code class="csharp plain">IList BucketSort(IList arrayToSort)</code></div><div class="line number2 index1 alt1"><code class="csharp plain">{</code></div><div class="line number3 index2 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code> <code class="csharp plain">(arrayToSort == </code><code class="csharp keyword">null</code> <code class="csharp plain">|| arrayToSort.Count == 0) </code><code class="csharp keyword">return</code> <code class="csharp plain">arrayToSort;</code></div><div class="line number4 index3 alt1">&nbsp;</div><div class="line number5 index4 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">object</code> <code class="csharp plain">max = arrayToSort[0];</code></div><div class="line number6 index5 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">object</code> <code class="csharp plain">min = arrayToSort[0];</code></div><div class="line number7 index6 alt2">&nbsp;</div><div class="line number8 index7 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">for</code> <code class="csharp plain">(</code><code class="csharp keyword">int</code> <code class="csharp plain">i = 0; i&nbsp; 0)</code></div><div class="line number9 index8 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div><div class="line number10 index9 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">max = arrayToSort[i];</code></div><div class="line number11 index10 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div><div class="line number12 index11 alt1">&nbsp;</div><div class="line number13 index12 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code> <code class="csharp plain">(((IComparable)arrayToSort[i]).CompareTo(min) &lt; 0)</code></div><div class="line number14 index13 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div><div class="line number15 index14 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">min = arrayToSort[i];</code></div><div class="line number16 index15 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div><div class="line number17 index16 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div><div class="line number18 index17 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">ArrayList[] holder = </code><code class="csharp keyword">new</code> <code class="csharp plain">ArrayList[(</code><code class="csharp keyword">int</code><code class="csharp plain">)max - (</code><code class="csharp keyword">int</code><code class="csharp plain">)min + 1];</code></div><div class="line number19 index18 alt2">&nbsp;</div><div class="line number20 index19 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">for</code> <code class="csharp plain">(</code><code class="csharp keyword">int</code> <code class="csharp plain">i = 0; i &lt; holder.Length; i++)</code></div><div class="line number21 index20 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div><div class="line number22 index21 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">holder[i] = </code><code class="csharp keyword">new</code> <code class="csharp plain">ArrayList();</code></div><div class="line number23 index22 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div><div class="line number24 index23 alt1">&nbsp;</div><div class="line number25 index24 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">for</code> <code class="csharp plain">(</code><code class="csharp keyword">int</code> <code class="csharp plain">i = 0; i &lt; arrayToSort.Count; i++)</code></div><div class="line number26 index25 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div><div class="line number27 index26 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">holder[(</code><code class="csharp keyword">int</code><code class="csharp plain">)arrayToSort[i] - (</code><code class="csharp keyword">int</code><code class="csharp plain">)min].Add(arrayToSort[i]);</code></div><div class="line number28 index27 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div><div class="line number29 index28 alt2">&nbsp;</div><div class="line number30 index29 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">int</code> <code class="csharp plain">k = 0;</code></div><div class="line number31 index30 alt2">&nbsp;</div><div class="line number32 index31 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">for</code> <code class="csharp plain">(</code><code class="csharp keyword">int</code> <code class="csharp plain">i = 0; i&nbsp; 0)</code></div><div class="line number33 index32 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div><div class="line number34 index33 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">for</code> <code class="csharp plain">(</code><code class="csharp keyword">int</code> <code class="csharp plain">j = 0; j &lt; holder[i].Count; j++)</code></div><div class="line number35 index34 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div><div class="line number36 index35 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">arrayToSort[k] = holder[i][j];</code></div><div class="line number37 index36 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">RedrawItem(k);</code></div><div class="line number38 index37 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">pnlSamples.Refresh();</code></div><div class="line number39 index38 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code> <code class="csharp plain">(chkCreateAnimation.Checked)</code></div><div class="line number40 index39 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">SavePicture();</code></div><div class="line number41 index40 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">k++;</code></div><div class="line number42 index41 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div><div class="line number43 index42 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div><div class="line number44 index43 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div><div class="line number45 index44 alt2">&nbsp;</div><div class="line number46 index45 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">return</code> <code class="csharp plain">arrayToSort;</code></div><div class="line number47 index46 alt2"><code class="csharp plain">}</code></div></div></td></tr></tbody></table></div></div>
<table>
<tbody>
<tr>
<td align="right"><strong>Worst case performance:</strong></td>
<td>O(n<sup>2</sup>.k)</td>
</tr>
<tr>
<td align="right"><strong>Best case performance:</strong></td>
<td>-</td>
</tr>
<tr>
<td align="right"><strong>Average case performance:</strong></td>
<td>O(n.k)</td>
</tr>
<tr>
<td align="right"><strong>Worst case space complexity:</strong></td>
<td>O(n.k)</td>
</tr>
</tbody>
</table>
<h4></h4>
<h4>梳排序</h4>
<p><img alt="" src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/7cc829d3gw1ei28gyu0uyg205k05kq4e.gif"></p>
<p>梳排序是一个相对简单的排序算法，最初它由Wlodzimierz Dobosiewicz于1980年设计出来。后来由斯蒂芬和理查德重新发现和推广。他们的文章在1991年4月发表在字节杂志上。梳排序改善了冒泡排序和类似快速排序的竞争算法。其要旨在于消除<span style="color: #ff0000;">乌龟</span>，亦即在阵列尾部的小数值，这些数值是造成冒泡排序缓慢的主因。相对地，<span style="color: #ff0000;">兔子</span>，亦即在阵列前端的大数值，不影响冒泡排序的效能。</p>
<p>在冒泡排序中，任何两个元素进行比较时，他们总是距离彼此为1。梳排序的基本思想是可以不是1。</p>
<p>梳排序中，开始时的间距设定为列表长度，然后每一次都会除以损耗因子(一般为1.3)。必要的时候，间距可以四舍五入，不断重复，直到间距变为1。然后间距就保持为1，并排完整个数列。最后阶段就相当于一个冒泡排序，但此时大多数乌龟已经处理掉，此时的冒泡排序就高效了。</p>
<div><div id="highlighter_379070" class="syntaxhighlighter notranslate csharp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div><div class="line number26 index25 alt1">26</div><div class="line number27 index26 alt2">27</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="csharp keyword">public</code> <code class="csharp plain">IList CombSort(IList arrayToSort)</code></div><div class="line number2 index1 alt1"><code class="csharp plain">{</code></div><div class="line number3 index2 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">int</code> <code class="csharp plain">gap = arrayToSort.Count;</code></div><div class="line number4 index3 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">int</code> <code class="csharp plain">swaps = 0;</code></div><div class="line number5 index4 alt2">&nbsp;</div><div class="line number6 index5 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">do</code></div><div class="line number7 index6 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div><div class="line number8 index7 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">gap = (</code><code class="csharp keyword">int</code><code class="csharp plain">)(gap / 1.247330950103979);</code></div><div class="line number9 index8 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code> <code class="csharp plain">(gap&nbsp; 0)</code></div><div class="line number10 index9 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div><div class="line number11 index10 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">object</code> <code class="csharp plain">temp = arrayToSort[i];</code></div><div class="line number12 index11 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">arrayToSort[i] = arrayToSort[i + gap];</code></div><div class="line number13 index12 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">arrayToSort[i + gap] = temp;</code></div><div class="line number14 index13 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">RedrawItem(i);</code></div><div class="line number15 index14 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">RedrawItem(i + gap);</code></div><div class="line number16 index15 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">pnlSamples.Refresh();</code></div><div class="line number17 index16 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code> <code class="csharp plain">(chkCreateAnimation.Checked)</code></div><div class="line number18 index17 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">SavePicture();</code></div><div class="line number19 index18 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">swaps = 1;</code></div><div class="line number20 index19 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div><div class="line number21 index20 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">i++;</code></div><div class="line number22 index21 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">} </code><code class="csharp keyword">while</code> <code class="csharp plain">(!(i + gap &gt;= arrayToSort.Count));</code></div><div class="line number23 index22 alt2">&nbsp;</div><div class="line number24 index23 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">} </code><code class="csharp keyword">while</code> <code class="csharp plain">(!(gap == 1 &amp;&amp; swaps == 0));</code></div><div class="line number25 index24 alt2">&nbsp;</div><div class="line number26 index25 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">return</code> <code class="csharp plain">arrayToSort;</code></div><div class="line number27 index26 alt2"><code class="csharp plain">}</code></div></div></td></tr></tbody></table></div></div>
<table>
<tbody>
<tr>
<td align="right"><strong>Worst case performance:</strong></td>
<td>-</td>
</tr>
<tr>
<td align="right"><strong>Best case performance:</strong></td>
<td>-</td>
</tr>
<tr>
<td align="right"><strong>Average case performance:</strong></td>
<td>-</td>
</tr>
<tr>
<td align="right"><strong>Worst case space complexity:</strong></td>
<td>O(1)</td>
</tr>
</tbody>
</table>
<h4></h4>
<h4>圈排序</h4>
<p><img alt="" src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/7cc829d3gw1ei28hey2leg205k05kgmm.gif"></p>
<p><b>Cycle sort</b>&nbsp;is an in-place,&nbsp;<a title="Sorting algorithm" href="http://en.wikipedia.org/wiki/Sorting_algorithm#Stability">unstable</a>&nbsp;<a title="Sorting algorithm" href="http://en.wikipedia.org/wiki/Sorting_algorithm">sorting algorithm</a>, a&nbsp;<a title="Comparison sort" href="http://en.wikipedia.org/wiki/Comparison_sort">comparison sort</a>&nbsp;that is theoretically optimal in terms of the total number of writes to the original&nbsp;<a title="Array data structure" href="http://en.wikipedia.org/wiki/Array_data_structure">array</a>, unlike any other in-place sorting algorithm. It is based on the idea that the&nbsp;<a title="Permutation" href="http://en.wikipedia.org/wiki/Permutation">permutation</a>&nbsp;to be sorted can be factored into&nbsp;<a title="Cycle (mathematics)" href="http://en.wikipedia.org/wiki/Cycle_(mathematics)">cycles</a>, which can individually be rotated to give a sorted result.</p>
<p>Unlike nearly every other sort, items are&nbsp;<i>never</i>&nbsp;written elsewhere in the array simply to push them out of the way of the action. Each value is either written zero times, if it’s already in its correct position, or written one time to its correct position. This matches the minimal number of overwrites required for a completed in-place sort.</p>
<p>它是一个就地、不稳定的排序算法，根据原始的数组，一种理论上最优的比较，并且与其它就地排序算法不同。它的思想是把要排的数列分解为圈，即可以分别旋转得到排序结果。</p>
<p>不同于其它排序的是，元素不会被放入数组的中任意位置从而推动排序。每个值如果它已经在其正确的位置则不动，否则只需要写一次即可。也就是说仅仅最小覆盖就能完成排序。</p>
<div><div id="highlighter_769240" class="syntaxhighlighter notranslate csharp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div><div class="line number26 index25 alt1">26</div><div class="line number27 index26 alt2">27</div><div class="line number28 index27 alt1">28</div><div class="line number29 index28 alt2">29</div><div class="line number30 index29 alt1">30</div><div class="line number31 index30 alt2">31</div><div class="line number32 index31 alt1">32</div><div class="line number33 index32 alt2">33</div><div class="line number34 index33 alt1">34</div><div class="line number35 index34 alt2">35</div><div class="line number36 index35 alt1">36</div><div class="line number37 index36 alt2">37</div><div class="line number38 index37 alt1">38</div><div class="line number39 index38 alt2">39</div><div class="line number40 index39 alt1">40</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="csharp keyword">public</code> <code class="csharp plain">IList CycleSort(IList arrayToSort)</code></div><div class="line number2 index1 alt1"><code class="csharp plain">{</code></div><div class="line number3 index2 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">int</code> <code class="csharp plain">writes = 0;</code></div><div class="line number4 index3 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">for</code> <code class="csharp plain">(</code><code class="csharp keyword">int</code> <code class="csharp plain">cycleStart = 0; cycleStart &lt; arrayToSort.Count; cycleStart++)</code></div><div class="line number5 index4 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div><div class="line number6 index5 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">object</code> <code class="csharp plain">item = arrayToSort[cycleStart];</code></div><div class="line number7 index6 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">int</code> <code class="csharp plain">pos = cycleStart;</code></div><div class="line number8 index7 alt1">&nbsp;</div><div class="line number9 index8 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">do</code></div><div class="line number10 index9 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div><div class="line number11 index10 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">int</code> <code class="csharp plain">to = 0;</code></div><div class="line number12 index11 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">for</code> <code class="csharp plain">(</code><code class="csharp keyword">int</code> <code class="csharp plain">i = 0; i &lt; arrayToSort.Count; i++)</code></div><div class="line number13 index12 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div><div class="line number14 index13 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code> <code class="csharp plain">(i != cycleStart &amp;&amp; ((IComparable)arrayToSort[i]).CompareTo(item) &lt; 0)</code></div><div class="line number15 index14 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div><div class="line number16 index15 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">to++;</code></div><div class="line number17 index16 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div><div class="line number18 index17 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div><div class="line number19 index18 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code> <code class="csharp plain">(pos != to)</code></div><div class="line number20 index19 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div><div class="line number21 index20 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">while</code> <code class="csharp plain">(pos != to &amp;&amp; ((IComparable)item).CompareTo(arrayToSort[to]) == 0)</code></div><div class="line number22 index21 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div><div class="line number23 index22 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">to++;</code></div><div class="line number24 index23 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div><div class="line number25 index24 alt2">&nbsp;</div><div class="line number26 index25 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">object</code> <code class="csharp plain">temp = arrayToSort[to];</code></div><div class="line number27 index26 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">arrayToSort[to] = item;</code></div><div class="line number28 index27 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">RedrawItem(to);</code></div><div class="line number29 index28 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">item = temp;</code></div><div class="line number30 index29 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">RedrawItem(cycleStart);</code></div><div class="line number31 index30 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">pnlSamples.Refresh();</code></div><div class="line number32 index31 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code> <code class="csharp plain">(chkCreateAnimation.Checked)</code></div><div class="line number33 index32 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">SavePicture();</code></div><div class="line number34 index33 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">writes++;</code></div><div class="line number35 index34 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">pos = to;</code></div><div class="line number36 index35 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div><div class="line number37 index36 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">} </code><code class="csharp keyword">while</code> <code class="csharp plain">(cycleStart != pos);</code></div><div class="line number38 index37 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div><div class="line number39 index38 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">return</code> <code class="csharp plain">arrayToSort;</code></div><div class="line number40 index39 alt1"><code class="csharp plain">}</code></div></div></td></tr></tbody></table></div></div>
<table>
<tbody>
<tr>
<td align="right"><strong>Worst case performance:</strong></td>
<td>O(n<sup>2</sup>)</td>
</tr>
<tr>
<td align="right"><strong>Best case performance:</strong></td>
<td>-</td>
</tr>
<tr>
<td align="right"><strong>Average case performance:</strong></td>
<td>O(n<sup>2</sup>)</td>
</tr>
<tr>
<td align="right"><strong>Worst case space complexity:</strong></td>
<td>O(1)</td>
</tr>
</tbody>
</table>
<h4></h4>
<h4>地精排序</h4>
<p><img alt="" src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/7cc829d3gw1ei28uk3lomg205k05kdl6.gif"></p>
<p>地精排序（gnome sorting，大部分地方翻成“侏儒排序”，“地精排序”明明更好听呀，本文就这么用了。）最初由哈米德在2000年的时候提出，当时称为傻瓜排序，之后被迪克说明并且命名为“地精排序”。除了某个元素是经过一系列的互换（类似冒泡排序）才到了它的正确位置之外，它和插入排序挺相似。</p>
<p>它在概念上很简单，不需要嵌套循环。运行时间是O(n<sup>2</sup>)，如果列表基本有序，则时间为O(n)。实际上，它和插入排序一样，平均运行时O(n<sup>2</sup>)。</p>
<p>The algorithm always finds the first place where two adjacent elements are in the wrong order, and swaps them. It takes advantage of the fact that performing a swap can introduce a new out-of-order adjacent pair only right before or after the two swapped elements. It does not assume that elements forward of the current position are sorted, so it only needs to check the position directly before the swapped elements.</p>
<p>地精算法总是发现第一个 【两个相邻元素存在错误的顺序】，然后把他们交换。原理是，交换一对乱序元素后，会产生一对新的无序相邻元素，而这两个元素要么交换前有序，要么交换后有序。它不认为元素当前的位置是有序的，所以它只需要在交换元素前直接检查位置。</p>
<div><div id="highlighter_173741" class="syntaxhighlighter notranslate csharp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div><div class="line number26 index25 alt1">26</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="csharp keyword">public</code> <code class="csharp plain">IList GnomeSort(IList arrayToSort)</code></div><div class="line number2 index1 alt1"><code class="csharp plain">{</code></div><div class="line number3 index2 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">int</code> <code class="csharp plain">pos = 1;</code></div><div class="line number4 index3 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">while</code> <code class="csharp plain">(pos = 0)</code></div><div class="line number5 index4 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div><div class="line number6 index5 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">pos++;</code></div><div class="line number7 index6 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div><div class="line number8 index7 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">else</code></div><div class="line number9 index8 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div><div class="line number10 index9 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">object</code> <code class="csharp plain">temp = arrayToSort[pos];</code></div><div class="line number11 index10 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">arrayToSort[pos] = arrayToSort[pos - 1];</code></div><div class="line number12 index11 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">RedrawItem(pos);</code></div><div class="line number13 index12 alt2">&nbsp;</div><div class="line number14 index13 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">arrayToSort[pos - 1] = temp;</code></div><div class="line number15 index14 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">RedrawItem(pos - 1);</code></div><div class="line number16 index15 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">RefreshPanel(pnlSamples);</code></div><div class="line number17 index16 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code> <code class="csharp plain">(savePicture)</code></div><div class="line number18 index17 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">SavePicture();</code></div><div class="line number19 index18 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code> <code class="csharp plain">(pos &gt; 1)</code></div><div class="line number20 index19 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div><div class="line number21 index20 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">pos--;</code></div><div class="line number22 index21 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div><div class="line number23 index22 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div><div class="line number24 index23 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div><div class="line number25 index24 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">return</code> <code class="csharp plain">arrayToSort;</code></div><div class="line number26 index25 alt1"><code class="csharp plain">}</code></div></div></td></tr></tbody></table></div></div>
<table>
<tbody>
<tr>
<td align="right"><strong>Worst case performance:</strong></td>
<td>O(n<sup>2</sup>)</td>
</tr>
<tr>
<td align="right"><strong>Best case performance:</strong></td>
<td>-</td>
</tr>
<tr>
<td align="right"><strong>Average case performance:</strong></td>
<td>-</td>
</tr>
<tr>
<td align="right"><strong>Worst case space complexity:</strong></td>
<td>O(1)</td>
</tr>
</tbody>
</table>
<h4></h4>
<h4><a href="http://zh.wikipedia.org/wiki/%E5%A0%86%E6%8E%92%E5%BA%8F" target="_blank">堆排序</a></h4>
<p><img alt="" src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/7cc829d3gw1ei28xsnnvrg205k05kwjz.gif"></p>
<p>堆排序是从数据集构建一个数据堆，然后提取最大元素，把它放到部分有序的数组的末尾。提取最大元素后，重新构建新堆，然后又接着提取新堆这的最大元素。重复这个过程，直到堆中没有元素并且数组已排好。堆排序的基本实现需要两个数组：一个用于构建堆，另一个是存放有序的元素。</p>
<p>堆排序把输入数组插入到一个二叉堆的数据结构中。最大值（大根堆）或最小值（小根堆）会被提取出来，直到堆空为止，提取出来的元素，是已经排好序的。每次提取后，堆中没变换的元素依然保留了，所以（堆排序的）唯一消耗就是提取过程。</p>
<p>在提取过程中，所需要的空间，就是用于存放堆的空间。为了实现恒定的空间开销，堆是存储在输入数组中还没有完成排序的那部分空间中。堆排序使用了两个堆操作：插入和根删除。每个提取的元素放到数组的最后一个空位置。数组剩余位置存放待排元素。</p>
<div><div id="highlighter_902868" class="syntaxhighlighter notranslate csharp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div><div class="line number26 index25 alt1">26</div><div class="line number27 index26 alt2">27</div><div class="line number28 index27 alt1">28</div><div class="line number29 index28 alt2">29</div><div class="line number30 index29 alt1">30</div><div class="line number31 index30 alt2">31</div><div class="line number32 index31 alt1">32</div><div class="line number33 index32 alt2">33</div><div class="line number34 index33 alt1">34</div><div class="line number35 index34 alt2">35</div><div class="line number36 index35 alt1">36</div><div class="line number37 index36 alt2">37</div><div class="line number38 index37 alt1">38</div><div class="line number39 index38 alt2">39</div><div class="line number40 index39 alt1">40</div><div class="line number41 index40 alt2">41</div><div class="line number42 index41 alt1">42</div><div class="line number43 index42 alt2">43</div><div class="line number44 index43 alt1">44</div><div class="line number45 index44 alt2">45</div><div class="line number46 index45 alt1">46</div><div class="line number47 index46 alt2">47</div><div class="line number48 index47 alt1">48</div><div class="line number49 index48 alt2">49</div><div class="line number50 index49 alt1">50</div><div class="line number51 index50 alt2">51</div><div class="line number52 index51 alt1">52</div><div class="line number53 index52 alt2">53</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="csharp keyword">public</code> <code class="csharp plain">IList HeapSort(IList list)</code></div><div class="line number2 index1 alt1"><code class="csharp plain">{</code></div><div class="line number3 index2 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">for</code> <code class="csharp plain">(</code><code class="csharp keyword">int</code> <code class="csharp plain">i = (list.Count - 1) / 2; i &gt;= 0; i--)</code></div><div class="line number4 index3 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">Adjust(list, i, list.Count - 1);</code></div><div class="line number5 index4 alt2">&nbsp;</div><div class="line number6 index5 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">for</code> <code class="csharp plain">(</code><code class="csharp keyword">int</code> <code class="csharp plain">i = list.Count - 1; i &gt;= 1; i--)</code></div><div class="line number7 index6 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div><div class="line number8 index7 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">object</code> <code class="csharp plain">Temp = list[0];</code></div><div class="line number9 index8 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">list[0] = list[i];</code></div><div class="line number10 index9 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">list[i] = Temp;</code></div><div class="line number11 index10 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">RedrawItem(0);</code></div><div class="line number12 index11 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">RedrawItem(i);</code></div><div class="line number13 index12 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">pnlSamples.Refresh();</code></div><div class="line number14 index13 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code> <code class="csharp plain">(chkCreateAnimation.Checked)</code></div><div class="line number15 index14 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">SavePicture();</code></div><div class="line number16 index15 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">Adjust(list, 0, i - 1);</code></div><div class="line number17 index16 alt2">&nbsp;</div><div class="line number18 index17 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div><div class="line number19 index18 alt2">&nbsp;</div><div class="line number20 index19 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">return</code> <code class="csharp plain">list;</code></div><div class="line number21 index20 alt2"><code class="csharp plain">}</code></div><div class="line number22 index21 alt1">&nbsp;</div><div class="line number23 index22 alt2"><code class="csharp keyword">public</code> <code class="csharp keyword">void</code> <code class="csharp plain">Adjust(IList list, </code><code class="csharp keyword">int</code> <code class="csharp plain">i, </code><code class="csharp keyword">int</code> <code class="csharp plain">m)</code></div><div class="line number24 index23 alt1"><code class="csharp plain">{</code></div><div class="line number25 index24 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">object</code> <code class="csharp plain">Temp = list[i];</code></div><div class="line number26 index25 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">int</code> <code class="csharp plain">j = i * 2 + 1;</code></div><div class="line number27 index26 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">while</code> <code class="csharp plain">(j &lt;= m)</code></div><div class="line number28 index27 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div><div class="line number29 index28 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code> <code class="csharp plain">(j &lt; m)</code></div><div class="line number30 index29 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code> <code class="csharp plain">(((IComparable)list[j]).CompareTo(list[j + 1]) &lt; 0)</code></div><div class="line number31 index30 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">j = j + 1;</code></div><div class="line number32 index31 alt1">&nbsp;</div><div class="line number33 index32 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code> <code class="csharp plain">(((IComparable)Temp).CompareTo(list[j]) &lt; 0)</code></div><div class="line number34 index33 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div><div class="line number35 index34 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">list[i] = list[j];</code></div><div class="line number36 index35 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">RedrawItem(i);</code></div><div class="line number37 index36 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">pnlSamples.Refresh();</code></div><div class="line number38 index37 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code> <code class="csharp plain">(chkCreateAnimation.Checked)</code></div><div class="line number39 index38 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">SavePicture();</code></div><div class="line number40 index39 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">i = j;</code></div><div class="line number41 index40 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">j = 2 * i + 1;</code></div><div class="line number42 index41 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div><div class="line number43 index42 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">else</code></div><div class="line number44 index43 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div><div class="line number45 index44 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">j = m + 1;</code></div><div class="line number46 index45 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div><div class="line number47 index46 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div><div class="line number48 index47 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">list[i] = Temp;</code></div><div class="line number49 index48 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">RedrawItem(i);</code></div><div class="line number50 index49 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">pnlSamples.Refresh();</code></div><div class="line number51 index50 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code> <code class="csharp plain">(chkCreateAnimation.Checked)</code></div><div class="line number52 index51 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">SavePicture();</code></div><div class="line number53 index52 alt2"><code class="csharp plain">}</code></div></div></td></tr></tbody></table></div></div>
<table>
<tbody>
<tr>
<td align="right"><strong>Worst case performance:</strong></td>
<td>O(n log n)</td>
</tr>
<tr>
<td align="right"><strong>Best case performance:</strong></td>
<td>O(n log n)</td>
</tr>
<tr>
<td align="right"><strong>Average case performance:</strong></td>
<td>O(n log n)</td>
</tr>
<tr>
<td align="right"><strong>Worst case space complexity:</strong></td>
<td>O(1)</td>
</tr>
</tbody>
</table>
<h4></h4>
<h4><a href="http://zh.wikipedia.org/wiki/%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F" target="_blank">插入排序</a></h4>
<p><strong><img alt="" src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/7cc829d3gw1ei28zp9aslg205k05kn3t.gif"></strong></p>
<p>插入排序的工作原理是通过构建有序序列，对于未排序数据，在已排序序列中从后向前扫描，找到相应位置并插入。<b>插入排序</b>在实现上，通常采用in-place排序（即只需用到O(1)的额外空间的排序），因而在从后向前扫描过程中，需要反复把已排序元素逐步向后挪位，为最新元素提供插入空间。</p>
<p>具体算法描述如下：</p>
<ol>
<li>从第一个元素开始，该元素可以认为已经被排序</li>
<li>取出下一个元素，在已经排序的元素序列中从后向前扫描</li>
<li>如果该元素（已排序）大于新元素，将该元素移到下一位置</li>
<li>重复步骤3，直到找到已排序的元素小于或者等于新元素的位置</li>
<li>将新元素插入到该位置后</li>
<li>重复步骤2~5</li>
</ol>
<div><div id="highlighter_55791" class="syntaxhighlighter notranslate csharp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div><div class="line number26 index25 alt1">26</div><div class="line number27 index26 alt2">27</div><div class="line number28 index27 alt1">28</div><div class="line number29 index28 alt2">29</div><div class="line number30 index29 alt1">30</div><div class="line number31 index30 alt2">31</div><div class="line number32 index31 alt1">32</div><div class="line number33 index32 alt2">33</div><div class="line number34 index33 alt1">34</div><div class="line number35 index34 alt2">35</div><div class="line number36 index35 alt1">36</div><div class="line number37 index36 alt2">37</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="csharp keyword">public</code> <code class="csharp plain">IList InsertionSort(IList arrayToSort)</code></div><div class="line number2 index1 alt1"><code class="csharp plain">{</code></div><div class="line number3 index2 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">for</code> <code class="csharp plain">(</code><code class="csharp keyword">int</code> <code class="csharp plain">i = 1; i &lt; arrayToSort.Count; i++)</code></div><div class="line number4 index3 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div><div class="line number5 index4 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">object</code> <code class="csharp plain">val = arrayToSort[i];</code></div><div class="line number6 index5 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">int</code> <code class="csharp plain">j = i - 1;</code></div><div class="line number7 index6 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">bool</code> <code class="csharp plain">done = </code><code class="csharp keyword">false</code><code class="csharp plain">;</code></div><div class="line number8 index7 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">do</code></div><div class="line number9 index8 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div><div class="line number10 index9 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code> <code class="csharp plain">(((IComparable)arrayToSort[j]).CompareTo(val) &gt; 0)</code></div><div class="line number11 index10 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div><div class="line number12 index11 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">arrayToSort[j + 1] = arrayToSort[j];</code></div><div class="line number13 index12 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">RedrawItem(j + 1);</code></div><div class="line number14 index13 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">pnlSamples.Refresh();</code></div><div class="line number15 index14 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code> <code class="csharp plain">(chkCreateAnimation.Checked)</code></div><div class="line number16 index15 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">SavePicture();</code></div><div class="line number17 index16 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">j--;</code></div><div class="line number18 index17 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code> <code class="csharp plain">(j &lt; 0)</code></div><div class="line number19 index18 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div><div class="line number20 index19 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">done = </code><code class="csharp keyword">true</code><code class="csharp plain">;</code></div><div class="line number21 index20 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div><div class="line number22 index21 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div><div class="line number23 index22 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">else</code></div><div class="line number24 index23 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div><div class="line number25 index24 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">done = </code><code class="csharp keyword">true</code><code class="csharp plain">;</code></div><div class="line number26 index25 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div><div class="line number27 index26 alt2">&nbsp;</div><div class="line number28 index27 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">} </code><code class="csharp keyword">while</code> <code class="csharp plain">(!done);</code></div><div class="line number29 index28 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">arrayToSort[j + 1] = val;</code></div><div class="line number30 index29 alt1">&nbsp;</div><div class="line number31 index30 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">RedrawItem(j + 1);</code></div><div class="line number32 index31 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">pnlSamples.Refresh();</code></div><div class="line number33 index32 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code> <code class="csharp plain">(chkCreateAnimation.Checked)</code></div><div class="line number34 index33 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">SavePicture();</code></div><div class="line number35 index34 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div><div class="line number36 index35 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">return</code> <code class="csharp plain">arrayToSort;</code></div><div class="line number37 index36 alt2"><code class="csharp plain">}</code></div></div></td></tr></tbody></table></div></div>
<table>
<tbody>
<tr>
<td align="right"><strong>Worst case performance:</strong></td>
<td>O(n<sup>2</sup>)</td>
</tr>
<tr>
<td align="right"><strong>Best case performance:</strong></td>
<td>O(n)</td>
</tr>
<tr>
<td align="right"><strong>Average case performance:</strong></td>
<td>O(n<sup>2</sup>)</td>
</tr>
<tr>
<td align="right"><strong>Worst case space complexity:</strong></td>
<td>O(1)</td>
</tr>
</tbody>
</table>
<h4></h4>
<h4><a href="http://zh.wikipedia.org/wiki/%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F" target="_blank">归并排序</a></h4>
<p><img alt="" src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/7cc829d3gw1ei297wbvz5g205k05kn4a.gif"></p>
<p>从概念上讲，归并排序的工作原理如下：</p>
<ul>
<li>如果列表的长度是0或1，那么它已经有序。否则：</li>
<li>未排序的部分平均划分为两个子序列。</li>
<li>每个子序列，递归使用归并排序。</li>
<li>合并两个子列表，使之整体有序。</li>
</ul>
<p>归并排序包含两个主要观点，以改善其运行时：</p>
<ul>
<li>一个小列表排序的花费少于大列表。</li>
<li>把两个有序表合并，要比直接排列一个无序表花费更少的步骤。例如，您只需要遍历每个有序列表一次即可(见下面的合并功能)。</li>
</ul>
<p>归并操作的过程如下：</p>
<ol>
<li>申请空间，使其大小为两个已经排序序列之和，该空间用来存放合并后的序列</li>
<li>设定两个指针，最初位置分别为两个已经排序序列的起始位置</li>
<li>比较两个指针所指向的元素，选择相对小的元素放入到合并空间，并移动指针到下一位置</li>
<li>重复步骤3直到某一指针到达序列尾</li>
<li>将另一序列剩下的所有元素直接复制到合并序列尾</li>
</ol>
<div><div id="highlighter_631747" class="syntaxhighlighter notranslate csharp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div><div class="line number26 index25 alt1">26</div><div class="line number27 index26 alt2">27</div><div class="line number28 index27 alt1">28</div><div class="line number29 index28 alt2">29</div><div class="line number30 index29 alt1">30</div><div class="line number31 index30 alt2">31</div><div class="line number32 index31 alt1">32</div><div class="line number33 index32 alt2">33</div><div class="line number34 index33 alt1">34</div><div class="line number35 index34 alt2">35</div><div class="line number36 index35 alt1">36</div><div class="line number37 index36 alt2">37</div><div class="line number38 index37 alt1">38</div><div class="line number39 index38 alt2">39</div><div class="line number40 index39 alt1">40</div><div class="line number41 index40 alt2">41</div><div class="line number42 index41 alt1">42</div><div class="line number43 index42 alt2">43</div><div class="line number44 index43 alt1">44</div><div class="line number45 index44 alt2">45</div><div class="line number46 index45 alt1">46</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="csharp keyword">public</code> <code class="csharp plain">IList MergeSort(IList a, </code><code class="csharp keyword">int</code> <code class="csharp plain">low, </code><code class="csharp keyword">int</code> <code class="csharp plain">height)</code></div><div class="line number2 index1 alt1"><code class="csharp plain">{</code></div><div class="line number3 index2 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">int</code> <code class="csharp plain">l = low;</code></div><div class="line number4 index3 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">int</code> <code class="csharp plain">h = height;</code></div><div class="line number5 index4 alt2">&nbsp;</div><div class="line number6 index5 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code> <code class="csharp plain">(l &gt;= h)</code></div><div class="line number7 index6 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div><div class="line number8 index7 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">return</code> <code class="csharp plain">a;</code></div><div class="line number9 index8 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div><div class="line number10 index9 alt1">&nbsp;</div><div class="line number11 index10 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">int</code> <code class="csharp plain">mid = (l + h) / 2;</code></div><div class="line number12 index11 alt1">&nbsp;</div><div class="line number13 index12 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">MergeSort(a, l, mid);</code></div><div class="line number14 index13 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">MergeSort(a, mid + 1, h);</code></div><div class="line number15 index14 alt2">&nbsp;</div><div class="line number16 index15 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">int</code> <code class="csharp plain">end_lo = mid;</code></div><div class="line number17 index16 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">int</code> <code class="csharp plain">start_hi = mid + 1;</code></div><div class="line number18 index17 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">while</code> <code class="csharp plain">((l &lt;= end_lo) &amp;&amp; (start_hi &lt;= h))</code></div><div class="line number19 index18 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div><div class="line number20 index19 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code> <code class="csharp plain">(((IComparable)a[l]).CompareTo(a[start_hi]) &lt; 0)</code></div><div class="line number21 index20 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div><div class="line number22 index21 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">l++;</code></div><div class="line number23 index22 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div><div class="line number24 index23 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">else</code></div><div class="line number25 index24 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div><div class="line number26 index25 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">object</code> <code class="csharp plain">temp = a[start_hi];</code></div><div class="line number27 index26 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">for</code> <code class="csharp plain">(</code><code class="csharp keyword">int</code> <code class="csharp plain">k = start_hi - 1; k &gt;= l; k--)</code></div><div class="line number28 index27 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div><div class="line number29 index28 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">a[k + 1] = a[k];</code></div><div class="line number30 index29 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">RedrawItem(k + 1);</code></div><div class="line number31 index30 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">pnlSamples.Refresh();</code></div><div class="line number32 index31 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code> <code class="csharp plain">(chkCreateAnimation.Checked)</code></div><div class="line number33 index32 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">SavePicture();</code></div><div class="line number34 index33 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div><div class="line number35 index34 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">a[l] = temp;</code></div><div class="line number36 index35 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">RedrawItem(l);</code></div><div class="line number37 index36 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">pnlSamples.Refresh();</code></div><div class="line number38 index37 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code> <code class="csharp plain">(chkCreateAnimation.Checked)</code></div><div class="line number39 index38 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">SavePicture();</code></div><div class="line number40 index39 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">l++;</code></div><div class="line number41 index40 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">end_lo++;</code></div><div class="line number42 index41 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">start_hi++;</code></div><div class="line number43 index42 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div><div class="line number44 index43 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div><div class="line number45 index44 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">return</code> <code class="csharp plain">a;</code></div><div class="line number46 index45 alt1"><code class="csharp plain">}</code></div></div></td></tr></tbody></table></div></div>
<table>
<tbody>
<tr>
<td align="right"><strong>Worst case performance:</strong></td>
<td>O(n log n)</td>
</tr>
<tr>
<td align="right"><strong>Best case performance:</strong></td>
<td>O(n log n)</td>
</tr>
<tr>
<td align="right"><strong>Average case performance:</strong></td>
<td>O(n log n)</td>
</tr>
<tr>
<td align="right"><strong>Worst case space complexity:</strong></td>
<td></td>
</tr>
</tbody>
</table>
<h4></h4>
<h4>奇偶排序</h4>
<p><img alt="" src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/7cc829d3gw1ei29a0lfxzg205k05kwk4.gif"></p>
<p>Odd-even sort is a relatively simple sorting algorithm. It is a comparison sort based on bubble sort with which it shares many characteristics. It functions by comparing all (odd, even)-indexed pairs of adjacent elements in the list and, if a pair is in the wrong order (the first is larger than the second) the elements are switched. The next step repeats this for (even, odd)-indexed pairs (of adjacent elements). Then it alternates between (odd, even) and (even, odd) steps until the list is sorted. It can be thought of as using parallel processors, each using bubble sort but starting at different points in the list (all odd indices for the first step). This sorting algorithm is only marginally more difficult than bubble sort to implement.</p>
<p>奇偶排序是一个相对简单的排序算法。它是一种基于冒泡排序的比较算法，它们有着许多共同点。它通过比较所有相邻的(奇数偶)对进行排序，如果某对存在错误的顺序(第一个元素大于第二个)，则交换。下一步针对｛偶奇对｝重复这一操作。然后序列就在(奇，偶)和(偶，奇)之间变换，直到列表有序。它可以看作是是使用并行处理器，每个都用了冒泡排序，但只是起始点在列表的不同位置(所有奇数位置可做第一步)。这个排序算法实现起来只是略微比冒泡排序复杂一些。</p>
<div><div id="highlighter_880701" class="syntaxhighlighter notranslate csharp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div><div class="line number26 index25 alt1">26</div><div class="line number27 index26 alt2">27</div><div class="line number28 index27 alt1">28</div><div class="line number29 index28 alt2">29</div><div class="line number30 index29 alt1">30</div><div class="line number31 index30 alt2">31</div><div class="line number32 index31 alt1">32</div><div class="line number33 index32 alt2">33</div><div class="line number34 index33 alt1">34</div><div class="line number35 index34 alt2">35</div><div class="line number36 index35 alt1">36</div><div class="line number37 index36 alt2">37</div><div class="line number38 index37 alt1">38</div><div class="line number39 index38 alt2">39</div><div class="line number40 index39 alt1">40</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="csharp keyword">public</code> <code class="csharp plain">IList OddEvenSort(IList arrayToSort)</code></div><div class="line number2 index1 alt1"><code class="csharp plain">{</code></div><div class="line number3 index2 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">bool</code> <code class="csharp plain">sorted = </code><code class="csharp keyword">false</code><code class="csharp plain">;</code></div><div class="line number4 index3 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">while</code> <code class="csharp plain">(!sorted)</code></div><div class="line number5 index4 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div><div class="line number6 index5 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">sorted = </code><code class="csharp keyword">true</code><code class="csharp plain">;</code></div><div class="line number7 index6 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">for</code> <code class="csharp plain">(var i = 1; i &lt; arrayToSort.Count - 1; i += 2)</code></div><div class="line number8 index7 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div><div class="line number9 index8 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code> <code class="csharp plain">(((IComparable)arrayToSort[i]).CompareTo(arrayToSort[i + 1]) &gt; 0)</code></div><div class="line number10 index9 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div><div class="line number11 index10 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">object</code> <code class="csharp plain">temp = arrayToSort[i];</code></div><div class="line number12 index11 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">arrayToSort[i] = arrayToSort[i + 1];</code></div><div class="line number13 index12 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">RedrawItem(i);</code></div><div class="line number14 index13 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">arrayToSort[i + 1] = temp;</code></div><div class="line number15 index14 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">RedrawItem(i+1);</code></div><div class="line number16 index15 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">pnlSamples.Refresh();</code></div><div class="line number17 index16 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code> <code class="csharp plain">(chkCreateAnimation.Checked)</code></div><div class="line number18 index17 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">SavePicture();</code></div><div class="line number19 index18 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">sorted = </code><code class="csharp keyword">false</code><code class="csharp plain">;</code></div><div class="line number20 index19 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div><div class="line number21 index20 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div><div class="line number22 index21 alt1">&nbsp;</div><div class="line number23 index22 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">for</code> <code class="csharp plain">(var i = 0; i &lt; arrayToSort.Count - 1; i += 2)</code></div><div class="line number24 index23 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div><div class="line number25 index24 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code> <code class="csharp plain">(((IComparable)arrayToSort[i]).CompareTo(arrayToSort[i + 1]) &gt; 0)</code></div><div class="line number26 index25 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div><div class="line number27 index26 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">object</code> <code class="csharp plain">temp = arrayToSort[i];</code></div><div class="line number28 index27 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">arrayToSort[i] = arrayToSort[i + 1];</code></div><div class="line number29 index28 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">arrayToSort[i + 1] = temp;</code></div><div class="line number30 index29 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">RedrawItem(i);</code></div><div class="line number31 index30 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">RedrawItem(i+1);</code></div><div class="line number32 index31 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">pnlSamples.Refresh();</code></div><div class="line number33 index32 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code> <code class="csharp plain">(chkCreateAnimation.Checked)</code></div><div class="line number34 index33 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">SavePicture();</code></div><div class="line number35 index34 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">sorted = </code><code class="csharp keyword">false</code><code class="csharp plain">;</code></div><div class="line number36 index35 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div><div class="line number37 index36 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div><div class="line number38 index37 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div><div class="line number39 index38 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">return</code> <code class="csharp plain">arrayToSort;</code></div><div class="line number40 index39 alt1"><code class="csharp plain">}</code></div></div></td></tr></tbody></table></div></div>
<h4></h4>
<h4><a href="http://zh.wikipedia.org/wiki/%E9%B8%BD%E5%B7%A2%E6%8E%92%E5%BA%8F" target="_blank">鸽巢排序</a></h4>
<p>鸽巢排序，也被称为 count sort （不要和 counting sort 搞混了），当数组元素的元素数量（n）和可能的键值数（key value，N）大约相同时，这种排序算法实用。它的时间复杂度为O(<i>n+N</i>)。</p>
<p>（在不可避免遍历每一个元素并且排序的情况下效率最好的一种排序算法。但它只有在差值(或者可被映射在差值)很小的范围内的数值排序的情况下实用。）</p>
<p>算法流程如下：</p>
<ul>
<li>Given an array of values to be sorted, set up an auxiliary array of initially empty “pigeonholes”, one pigeonhole for each key through the range of the original array.&nbsp;假设有个一个待排序的数组，给它建立了一个空的辅助数组（称为“鸽巢”）。把原始数组中的每个值作为一个key(“格子”)。</li>
<li>Going over the original array, put each value into the pigeonhole corresponding to its key, such that each pigeonhole eventually contains a list of all values with that key.&nbsp;遍历原始数组，根据每个值放入辅助数组对应的“格子”</li>
<li>Iterate over the pigeonhole array in order, and put elements from non-empty pigeonholes back into the original array.&nbsp;顺序遍历“鸽巢”数组（辅助数组），把非空鸽巢中的元素放回原始数组。</li>
</ul>
<div><div id="highlighter_52442" class="syntaxhighlighter notranslate csharp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div><div class="line number26 index25 alt1">26</div><div class="line number27 index26 alt2">27</div><div class="line number28 index27 alt1">28</div><div class="line number29 index28 alt2">29</div><div class="line number30 index29 alt1">30</div><div class="line number31 index30 alt2">31</div><div class="line number32 index31 alt1">32</div><div class="line number33 index32 alt2">33</div><div class="line number34 index33 alt1">34</div><div class="line number35 index34 alt2">35</div><div class="line number36 index35 alt1">36</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="csharp keyword">public</code> <code class="csharp plain">IList PigeonHoleSort(IList list)</code></div><div class="line number2 index1 alt1"><code class="csharp plain">{</code></div><div class="line number3 index2 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">object</code> <code class="csharp plain">min = list[0], max = list[0];</code></div><div class="line number4 index3 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">foreach</code> <code class="csharp plain">(</code><code class="csharp keyword">object</code> <code class="csharp plain">x </code><code class="csharp keyword">in</code> <code class="csharp plain">list)</code></div><div class="line number5 index4 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div><div class="line number6 index5 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code> <code class="csharp plain">(((IComparable)min).CompareTo(x) &gt; 0)</code></div><div class="line number7 index6 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div><div class="line number8 index7 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">min = x;</code></div><div class="line number9 index8 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div><div class="line number10 index9 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code> <code class="csharp plain">(((IComparable)max).CompareTo(x) &lt; 0)</code></div><div class="line number11 index10 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div><div class="line number12 index11 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">max = x;</code></div><div class="line number13 index12 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div><div class="line number14 index13 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">Thread.Sleep(speed);</code></div><div class="line number15 index14 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div><div class="line number16 index15 alt1">&nbsp;</div><div class="line number17 index16 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">int</code> <code class="csharp plain">size = (</code><code class="csharp keyword">int</code><code class="csharp plain">)max - (</code><code class="csharp keyword">int</code><code class="csharp plain">)min + 1;</code></div><div class="line number18 index17 alt1">&nbsp;</div><div class="line number19 index18 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">int</code><code class="csharp plain">[] holes = </code><code class="csharp keyword">new</code> <code class="csharp keyword">int</code><code class="csharp plain">[size];</code></div><div class="line number20 index19 alt1">&nbsp;</div><div class="line number21 index20 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">foreach</code> <code class="csharp plain">(</code><code class="csharp keyword">int</code> <code class="csharp plain">x </code><code class="csharp keyword">in</code> <code class="csharp plain">list)</code></div><div class="line number22 index21 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">holes[x - (</code><code class="csharp keyword">int</code><code class="csharp plain">)min]++;</code></div><div class="line number23 index22 alt2">&nbsp;</div><div class="line number24 index23 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">int</code> <code class="csharp plain">i = 0;</code></div><div class="line number25 index24 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">for</code> <code class="csharp plain">(</code><code class="csharp keyword">int</code> <code class="csharp plain">count = 0; count &lt; size; count++)</code></div><div class="line number26 index25 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">while</code> <code class="csharp plain">(holes[count]-- &gt; 0)</code></div><div class="line number27 index26 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div><div class="line number28 index27 alt1">&nbsp;</div><div class="line number29 index28 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">list[i] = count + (</code><code class="csharp keyword">int</code><code class="csharp plain">)min;</code></div><div class="line number30 index29 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">RedrawItem(i);</code></div><div class="line number31 index30 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">i++;</code></div><div class="line number32 index31 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">RefreshPanel(pnlSamples);</code></div><div class="line number33 index32 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">Thread.Sleep(speed);</code></div><div class="line number34 index33 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div><div class="line number35 index34 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">return</code> <code class="csharp plain">list;</code></div><div class="line number36 index35 alt1"><code class="csharp plain">}</code></div></div></td></tr></tbody></table></div></div>
<table>
<tbody>
<tr>
<td align="right"><strong>Worst case performance:</strong></td>
<td>O(n+2<sup>k</sup>)</td>
</tr>
<tr>
<td align="right"><strong>Best case performance:</strong></td>
<td>-</td>
</tr>
<tr>
<td align="right"><strong>Average case performance:</strong></td>
<td>O(n+2<sup>k</sup>)</td>
</tr>
<tr>
<td align="right"><strong>Worst case space complexity:</strong></td>
<td>O(2<sup>k</sup>)</td>
</tr>
</tbody>
</table>
<h4></h4>
<h4><a href="http://zh.wikipedia.org/wiki/%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F" target="_blank">快速排序</a></h4>
<p><img alt="" src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/7cc829d3gw1ei29b0q4fzg205k05k3zt.gif"></p>
<p>快速排序采用分而治之的策略，把一个列表划分为两个子列表。步骤是：</p>
<ul>
<li>从列表中，选择一个元素，称为基准（pivot）。</li>
<li>重新排序列表，把所有数值小于枢轴的元素排到基准之前，所有数值大于基准的排基准之后(相等的值可以有较多的选择)。在这个分区退出之后，该基准就处于数列的中间位置。这个称为<b>分区（partition）</b>操作。</li>
<li>分别递归排序较大元素的子列表和较小的元素的子列表。</li>
</ul>
<p>递归的结束条件是列表元素为零或一个，即已不需要排序。</p>
<div><div id="highlighter_284318" class="syntaxhighlighter notranslate csharp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div><div class="line number26 index25 alt1">26</div><div class="line number27 index26 alt2">27</div><div class="line number28 index27 alt1">28</div><div class="line number29 index28 alt2">29</div><div class="line number30 index29 alt1">30</div><div class="line number31 index30 alt2">31</div><div class="line number32 index31 alt1">32</div><div class="line number33 index32 alt2">33</div><div class="line number34 index33 alt1">34</div><div class="line number35 index34 alt2">35</div><div class="line number36 index35 alt1">36</div><div class="line number37 index36 alt2">37</div><div class="line number38 index37 alt1">38</div><div class="line number39 index38 alt2">39</div><div class="line number40 index39 alt1">40</div><div class="line number41 index40 alt2">41</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="csharp keyword">public</code> <code class="csharp plain">IList QuickSort(IList a, </code><code class="csharp keyword">int</code> <code class="csharp plain">left, </code><code class="csharp keyword">int</code> <code class="csharp plain">right)</code></div><div class="line number2 index1 alt1"><code class="csharp plain">{</code></div><div class="line number3 index2 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">int</code> <code class="csharp plain">i = left;</code></div><div class="line number4 index3 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">int</code> <code class="csharp plain">j = right;</code></div><div class="line number5 index4 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">double</code> <code class="csharp plain">pivotValue = ((left + right) / 2);</code></div><div class="line number6 index5 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">int</code> <code class="csharp plain">x = (</code><code class="csharp keyword">int</code><code class="csharp plain">)a[</code><code class="csharp keyword">int</code><code class="csharp plain">.Parse(pivotValue.ToString())];</code></div><div class="line number7 index6 alt2">&nbsp;</div><div class="line number8 index7 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">while</code> <code class="csharp plain">(i &lt;= j)</code></div><div class="line number9 index8 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div><div class="line number10 index9 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">while</code> <code class="csharp plain">(((IComparable)a[i]).CompareTo(x) &lt; 0)</code></div><div class="line number11 index10 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div><div class="line number12 index11 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">i++;</code></div><div class="line number13 index12 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div><div class="line number14 index13 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">while</code> <code class="csharp plain">(((IComparable)x).CompareTo(a[j]) &lt; 0)</code></div><div class="line number15 index14 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div><div class="line number16 index15 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">j--;</code></div><div class="line number17 index16 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div><div class="line number18 index17 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code> <code class="csharp plain">(i &lt;= j)</code></div><div class="line number19 index18 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div><div class="line number20 index19 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">object</code> <code class="csharp plain">temp = a[i];</code></div><div class="line number21 index20 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">a[i] = a[j];</code></div><div class="line number22 index21 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">RedrawItem(i);</code></div><div class="line number23 index22 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">i++;</code></div><div class="line number24 index23 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">a[j] = temp;</code></div><div class="line number25 index24 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">RedrawItem(j);</code></div><div class="line number26 index25 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">j--;</code></div><div class="line number27 index26 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">pnlSamples.Refresh();</code></div><div class="line number28 index27 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code> <code class="csharp plain">(chkCreateAnimation.Checked)</code></div><div class="line number29 index28 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">SavePicture();</code></div><div class="line number30 index29 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div><div class="line number31 index30 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div><div class="line number32 index31 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code> <code class="csharp plain">(left &lt; j)</code></div><div class="line number33 index32 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div><div class="line number34 index33 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">QuickSort(a, left, j);</code></div><div class="line number35 index34 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div><div class="line number36 index35 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code> <code class="csharp plain">(i &lt; right)</code></div><div class="line number37 index36 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div><div class="line number38 index37 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">QuickSort(a, i, right);</code></div><div class="line number39 index38 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div><div class="line number40 index39 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">return</code> <code class="csharp plain">a;</code></div><div class="line number41 index40 alt2"><code class="csharp plain">}</code></div></div></td></tr></tbody></table></div></div>
<table>
<tbody>
<tr>
<td align="right"><strong>Worst case performance:</strong></td>
<td>O(n<sup>2</sup>)</td>
</tr>
<tr>
<td align="right"><strong>Best case performance:</strong></td>
<td>O(n log n)</td>
</tr>
<tr>
<td align="right"><strong>Average case performance:</strong></td>
<td>O(n log n)</td>
</tr>
<tr>
<td align="right"><strong>Worst case space complexity:</strong></td>
<td>O(log n)</td>
</tr>
</tbody>
</table>
<h4></h4>
<h4>使用冒泡的快速排序</h4>
<p><img alt="" src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/7cc829d3gw1ei29dap69sg205k05kmzc.gif"></p>
<div><div id="highlighter_339472" class="syntaxhighlighter notranslate csharp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div><div class="line number26 index25 alt1">26</div><div class="line number27 index26 alt2">27</div><div class="line number28 index27 alt1">28</div><div class="line number29 index28 alt2">29</div><div class="line number30 index29 alt1">30</div><div class="line number31 index30 alt2">31</div><div class="line number32 index31 alt1">32</div><div class="line number33 index32 alt2">33</div><div class="line number34 index33 alt1">34</div><div class="line number35 index34 alt2">35</div><div class="line number36 index35 alt1">36</div><div class="line number37 index36 alt2">37</div><div class="line number38 index37 alt1">38</div><div class="line number39 index38 alt2">39</div><div class="line number40 index39 alt1">40</div><div class="line number41 index40 alt2">41</div><div class="line number42 index41 alt1">42</div><div class="line number43 index42 alt2">43</div><div class="line number44 index43 alt1">44</div><div class="line number45 index44 alt2">45</div><div class="line number46 index45 alt1">46</div><div class="line number47 index46 alt2">47</div><div class="line number48 index47 alt1">48</div><div class="line number49 index48 alt2">49</div><div class="line number50 index49 alt1">50</div><div class="line number51 index50 alt2">51</div><div class="line number52 index51 alt1">52</div><div class="line number53 index52 alt2">53</div><div class="line number54 index53 alt1">54</div><div class="line number55 index54 alt2">55</div><div class="line number56 index55 alt1">56</div><div class="line number57 index56 alt2">57</div><div class="line number58 index57 alt1">58</div><div class="line number59 index58 alt2">59</div><div class="line number60 index59 alt1">60</div><div class="line number61 index60 alt2">61</div><div class="line number62 index61 alt1">62</div><div class="line number63 index62 alt2">63</div><div class="line number64 index63 alt1">64</div><div class="line number65 index64 alt2">65</div><div class="line number66 index65 alt1">66</div><div class="line number67 index66 alt2">67</div><div class="line number68 index67 alt1">68</div><div class="line number69 index68 alt2">69</div><div class="line number70 index69 alt1">70</div><div class="line number71 index70 alt2">71</div><div class="line number72 index71 alt1">72</div><div class="line number73 index72 alt2">73</div><div class="line number74 index73 alt1">74</div><div class="line number75 index74 alt2">75</div><div class="line number76 index75 alt1">76</div><div class="line number77 index76 alt2">77</div><div class="line number78 index77 alt1">78</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="csharp keyword">public</code> <code class="csharp plain">IList BubbleSort(IList arrayToSort, </code><code class="csharp keyword">int</code> <code class="csharp plain">left, </code><code class="csharp keyword">int</code> <code class="csharp plain">right)</code></div><div class="line number2 index1 alt1"><code class="csharp plain">{</code></div><div class="line number3 index2 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">for</code> <code class="csharp plain">(</code><code class="csharp keyword">int</code> <code class="csharp plain">i = left; i &lt; right; i++)</code></div><div class="line number4 index3 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div><div class="line number5 index4 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">for</code> <code class="csharp plain">(</code><code class="csharp keyword">int</code> <code class="csharp plain">j = right; j &gt; i; j--)</code></div><div class="line number6 index5 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div><div class="line number7 index6 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code> <code class="csharp plain">(((IComparable)arrayToSort[j - 1]).CompareTo(arrayToSort[j]) &gt; 0)</code></div><div class="line number8 index7 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div><div class="line number9 index8 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">object</code> <code class="csharp plain">temp = arrayToSort[j - 1];</code></div><div class="line number10 index9 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">arrayToSort[j - 1] = arrayToSort[j];</code></div><div class="line number11 index10 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">RedrawItem(j-1);</code></div><div class="line number12 index11 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">arrayToSort[j] = temp;</code></div><div class="line number13 index12 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">RedrawItem(j);</code></div><div class="line number14 index13 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">pnlSamples.Refresh();</code></div><div class="line number15 index14 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code> <code class="csharp plain">(chkCreateAnimation.Checked)</code></div><div class="line number16 index15 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">SavePicture();</code></div><div class="line number17 index16 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div><div class="line number18 index17 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div><div class="line number19 index18 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div><div class="line number20 index19 alt1">&nbsp;</div><div class="line number21 index20 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">return</code> <code class="csharp plain">arrayToSort;</code></div><div class="line number22 index21 alt1"><code class="csharp plain">}</code></div><div class="line number23 index22 alt2">&nbsp;</div><div class="line number24 index23 alt1"><code class="csharp keyword">public</code> <code class="csharp plain">IList QuickSortWithBubbleSort(IList a, </code><code class="csharp keyword">int</code> <code class="csharp plain">left, </code><code class="csharp keyword">int</code> <code class="csharp plain">right)</code></div><div class="line number25 index24 alt2"><code class="csharp plain">{</code></div><div class="line number26 index25 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">int</code> <code class="csharp plain">i = left;</code></div><div class="line number27 index26 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">int</code> <code class="csharp plain">j = right;</code></div><div class="line number28 index27 alt1">&nbsp;</div><div class="line number29 index28 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code> <code class="csharp plain">(right - left &lt;= 6)</code></div><div class="line number30 index29 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div><div class="line number31 index30 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">BubbleSort(a, left, right);</code></div><div class="line number32 index31 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">return</code> <code class="csharp plain">a;</code></div><div class="line number33 index32 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div><div class="line number34 index33 alt1">&nbsp;</div><div class="line number35 index34 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">double</code> <code class="csharp plain">pivotValue = ((left + right) / 2);</code></div><div class="line number36 index35 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">int</code> <code class="csharp plain">x = (</code><code class="csharp keyword">int</code><code class="csharp plain">)a[</code><code class="csharp keyword">int</code><code class="csharp plain">.Parse(pivotValue.ToString())];</code></div><div class="line number37 index36 alt2">&nbsp;</div><div class="line number38 index37 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">a[(left + right) / 2] = a[right];</code></div><div class="line number39 index38 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">a[right] = x;</code></div><div class="line number40 index39 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">RedrawItem(right);</code></div><div class="line number41 index40 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">pnlSamples.Refresh();</code></div><div class="line number42 index41 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code> <code class="csharp plain">(chkCreateAnimation.Checked)</code></div><div class="line number43 index42 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">SavePicture();</code></div><div class="line number44 index43 alt1">&nbsp;</div><div class="line number45 index44 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">while</code> <code class="csharp plain">(i &lt;= j)</code></div><div class="line number46 index45 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div><div class="line number47 index46 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">while</code> <code class="csharp plain">(((IComparable)a[i]).CompareTo(x) &lt; 0)</code></div><div class="line number48 index47 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div><div class="line number49 index48 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">i++;</code></div><div class="line number50 index49 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div><div class="line number51 index50 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">while</code> <code class="csharp plain">(((IComparable)x).CompareTo(a[j]) &lt; 0)</code></div><div class="line number52 index51 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div><div class="line number53 index52 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">j--;</code></div><div class="line number54 index53 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div><div class="line number55 index54 alt2">&nbsp;</div><div class="line number56 index55 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code> <code class="csharp plain">(i &lt;= j)</code></div><div class="line number57 index56 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div><div class="line number58 index57 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">object</code> <code class="csharp plain">temp = a[i];</code></div><div class="line number59 index58 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">a[i++] = a[j];</code></div><div class="line number60 index59 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">RedrawItem(i - 1);</code></div><div class="line number61 index60 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">a[j--] = temp;</code></div><div class="line number62 index61 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">RedrawItem(j + 1);</code></div><div class="line number63 index62 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">pnlSamples.Refresh();</code></div><div class="line number64 index63 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code> <code class="csharp plain">(chkCreateAnimation.Checked)</code></div><div class="line number65 index64 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">SavePicture();</code></div><div class="line number66 index65 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div><div class="line number67 index66 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div><div class="line number68 index67 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code> <code class="csharp plain">(left &lt; j)</code></div><div class="line number69 index68 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div><div class="line number70 index69 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">QuickSortWithBubbleSort(a, left, j);</code></div><div class="line number71 index70 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div><div class="line number72 index71 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code> <code class="csharp plain">(i &lt; right)</code></div><div class="line number73 index72 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div><div class="line number74 index73 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">QuickSortWithBubbleSort(a, i, right);</code></div><div class="line number75 index74 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div><div class="line number76 index75 alt1">&nbsp;</div><div class="line number77 index76 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">return</code> <code class="csharp plain">a;</code></div><div class="line number78 index77 alt1"><code class="csharp plain">}</code></div></div></td></tr></tbody></table></div></div>
<h4></h4>
<h4><a href="http://zh.wikipedia.org/wiki/%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F" target="_blank">选择排序</a></h4>
<p><img alt="" src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/7cc829d3gw1ei29e41wcdg205k05kjsb.gif"></p>
<p>原理：首先在未排序序列中找到最小（大）元素，存放到排序序列的起始位置，然后，再从剩余未排序元素中继续寻找最小（大）元素，然后放到已排序序列的末尾。以此类推，直到所有元素均排序完毕。</p>
<p>算法过程如下：</p>
<ul>
<li>找到列表中的最小值，</li>
<li>把它和第一个位置的元素交换，</li>
<li>列表其余部分重复上面的步骤(从第二个位置开始，且每次加1).</li>
</ul>
<p>列表被有效地分为两个部分：从左到右的有序部分，和余下待排序部分。</p>
<div><div id="highlighter_73531" class="syntaxhighlighter notranslate csharp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div><div class="line number26 index25 alt1">26</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="csharp keyword">public</code> <code class="csharp plain">IList SelectionSort(IList arrayToSort)</code></div><div class="line number2 index1 alt1"><code class="csharp plain">{</code></div><div class="line number3 index2 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">int</code> <code class="csharp plain">min;</code></div><div class="line number4 index3 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">for</code> <code class="csharp plain">(</code><code class="csharp keyword">int</code> <code class="csharp plain">i = 0; i &lt; arrayToSort.Count; i++)</code></div><div class="line number5 index4 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div><div class="line number6 index5 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">min = i;</code></div><div class="line number7 index6 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">for</code> <code class="csharp plain">(</code><code class="csharp keyword">int</code> <code class="csharp plain">j = i + 1; j &lt; arrayToSort.Count; j++)</code></div><div class="line number8 index7 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div><div class="line number9 index8 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code> <code class="csharp plain">(((IComparable)arrayToSort[j]).CompareTo(arrayToSort[min]) &lt; 0)</code></div><div class="line number10 index9 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div><div class="line number11 index10 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">min = j;</code></div><div class="line number12 index11 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div><div class="line number13 index12 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div><div class="line number14 index13 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">object</code> <code class="csharp plain">temp = arrayToSort[i];</code></div><div class="line number15 index14 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">arrayToSort[i] = arrayToSort[min];</code></div><div class="line number16 index15 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">arrayToSort[min] = temp;</code></div><div class="line number17 index16 alt2">&nbsp;</div><div class="line number18 index17 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">RedrawItem(i);</code></div><div class="line number19 index18 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">RedrawItem(min);</code></div><div class="line number20 index19 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">pnlSamples.Refresh();</code></div><div class="line number21 index20 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code> <code class="csharp plain">(chkCreateAnimation.Checked)</code></div><div class="line number22 index21 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">SavePicture();&nbsp;&nbsp;&nbsp; </code></div><div class="line number23 index22 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div><div class="line number24 index23 alt1">&nbsp;</div><div class="line number25 index24 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">return</code> <code class="csharp plain">arrayToSort;</code></div><div class="line number26 index25 alt1"><code class="csharp plain">}</code></div></div></td></tr></tbody></table></div></div>
<table>
<tbody>
<tr>
<td align="right"><strong>Worst case performance:</strong></td>
<td>O(n<sup>2</sup>)</td>
</tr>
<tr>
<td align="right"><strong>Best case performance:</strong></td>
<td>O(n<sup>2</sup>)</td>
</tr>
<tr>
<td align="right"><strong>Average case performance:</strong></td>
<td>O(n<sup>2</sup>)</td>
</tr>
<tr>
<td align="right"><strong>Worst case space complexity:</strong></td>
<td>O(1)</td>
</tr>
</tbody>
</table>
<h4></h4>
<h4>希尔排序</h4>
<p><img alt="" src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/7cc829d3gw1ei29fngrabg205k05kter.gif"></p>
<p>希尔排序通过将比较的全部元素分为几个区域来提升插入排序的性能。这样可以让一个元素可以一次性地朝最终位置前进一大步。然后算法再取越来越小的步长进行排序，算法的最后一步就是普通的插入排序，但是到了这步，需排序的数据几乎是已排好的了（此时插入排序较快）。</p>
<p>假设有一个很小的数据在一个已按升序排好序的数组的末端。如果用复杂度为O(<i>n</i><sup>2</sup>)的排序（冒泡排序或插入排序），可能会进行<i>n</i>次的比较和交换才能将该数据移至正确位置。而希尔排序会用较大的步长移动数据，所以小数据只需进行少数比较和交换即可到正确位置。</p>
<p>一个更好理解的希尔排序实现：将数组列在一个表中并对列排序（用插入排序）。重复这过程，不过每次用更长的列来进行。最后整个表就只有一列了。将数组转换至表是为了更好地理解这算法，算法本身仅仅对原数组进行排序（通过增加索引的步长，例如是用<code>i += step_size</code>而不是<code>i++</code>）。</p>
<p>例如，假设有这样一组数[ 13 14 94 33 82 25 59 94 65 23 45 27 73 25 39 10 ]，如果我们以步长为5开始进行排序，我们可以通过将这列表放在有5列的表中来更好地描述算法，这样他们就应该看起来是这样：</p>
<pre>13 14 94 33 82
25 59 94 65 23
45 27 73 25 39
10</pre>
<p>然后我们对每列进行排序：</p>
<pre>10 14 73 25 23
13 27 94 33 39
25 59 94 65 82
45</pre>
<p>将上述四行数字，依序接在一起时我们得到：[ 10 14 73 25 23 13 27 94 33 39 25 59 94 65 82 45 ].这时10已经移至正确位置了，然后再以3为步长进行排序：</p>
<pre>10 14 73
25 23 13
27 94 33
39 25 59
94 65 82
45</pre>
<p>排序之后变为：</p>
<pre>10 14 13
25 23 33
27 25 59
39 65 73
45 94 82
94</pre>
<p>最后以1步长进行排序（此时就是简单的插入排序了）。</p>
<div><div id="highlighter_467987" class="syntaxhighlighter notranslate csharp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div><div class="line number26 index25 alt1">26</div><div class="line number27 index26 alt2">27</div><div class="line number28 index27 alt1">28</div><div class="line number29 index28 alt2">29</div><div class="line number30 index29 alt1">30</div><div class="line number31 index30 alt2">31</div><div class="line number32 index31 alt1">32</div><div class="line number33 index32 alt2">33</div><div class="line number34 index33 alt1">34</div><div class="line number35 index34 alt2">35</div><div class="line number36 index35 alt1">36</div><div class="line number37 index36 alt2">37</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="csharp keyword">public</code> <code class="csharp plain">IList ShellSort(IList arrayToSort)</code></div><div class="line number2 index1 alt1"><code class="csharp plain">{</code></div><div class="line number3 index2 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">int</code> <code class="csharp plain">i, j, increment;</code></div><div class="line number4 index3 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">object</code> <code class="csharp plain">temp;</code></div><div class="line number5 index4 alt2">&nbsp;</div><div class="line number6 index5 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">increment = arrayToSort.Count / 2;</code></div><div class="line number7 index6 alt2">&nbsp;</div><div class="line number8 index7 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">while</code> <code class="csharp plain">(increment &gt; 0)</code></div><div class="line number9 index8 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div><div class="line number10 index9 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">for</code> <code class="csharp plain">(i = 0; i &lt; arrayToSort.Count; i++)</code></div><div class="line number11 index10 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div><div class="line number12 index11 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">j = i;</code></div><div class="line number13 index12 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">temp = arrayToSort[i];</code></div><div class="line number14 index13 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">while</code> <code class="csharp plain">((j &gt;= increment) &amp;&amp; </code></div><div class="line number15 index14 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">(((IComparable)arrayToSort[j - increment]).CompareTo(temp) &gt; 0))</code></div><div class="line number16 index15 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div><div class="line number17 index16 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">arrayToSort[j] = arrayToSort[j - increment];</code></div><div class="line number18 index17 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">RedrawItem(j);</code></div><div class="line number19 index18 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">pnlSamples.Refresh();</code></div><div class="line number20 index19 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code> <code class="csharp plain">(chkCreateAnimation.Checked)</code></div><div class="line number21 index20 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">SavePicture();</code></div><div class="line number22 index21 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">j = j - increment;</code></div><div class="line number23 index22 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div><div class="line number24 index23 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">arrayToSort[j] = temp;</code></div><div class="line number25 index24 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">RedrawItem(j);</code></div><div class="line number26 index25 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">pnlSamples.Refresh();</code></div><div class="line number27 index26 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code> <code class="csharp plain">(chkCreateAnimation.Checked)</code></div><div class="line number28 index27 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">SavePicture();</code></div><div class="line number29 index28 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div><div class="line number30 index29 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code> <code class="csharp plain">(increment == 2)</code></div><div class="line number31 index30 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">increment = 1;</code></div><div class="line number32 index31 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">else</code></div><div class="line number33 index32 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">increment = increment * 5 / 11;</code></div><div class="line number34 index33 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div><div class="line number35 index34 alt2">&nbsp;</div><div class="line number36 index35 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">return</code> <code class="csharp plain">arrayToSort;</code></div><div class="line number37 index36 alt2"><code class="csharp plain">}</code></div></div></td></tr></tbody></table></div></div>
<table>
<tbody>
<tr>
<td align="right"><strong>Worst case performance:</strong></td>
<td>-</td>
</tr>
<tr>
<td align="right"><strong>Best case performance:</strong></td>
<td>n</td>
</tr>
<tr>
<td align="right"><strong>Average case performance:</strong></td>
<td>O(n log<sup>2</sup> n)</td>
</tr>
<tr>
<td align="right"><strong>Worst case space complexity:</strong></td>
<td>O(1)</td>
</tr>
</tbody>
</table>
<p>最后，感谢给与我帮助的人，有了你们的帮助，本文的质量有了更大的提高，谢谢！<br>
<!--EndFragment--></p>
<p style="text-align: left;"><!--EndFragment--></p>


<!-- div id="ad1">
</div -->

<p><a target="_blank" rel="nofollow" href="http://www.jobdeer.com/?fr=jobbole"><img src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/8b8517e334ae87e4094570d9ce62c7f7.png"></a></p>
	
<br>

原文链接： <a target="_blank" ref="nofollow" href="http://www.codeproject.com/articles/132757/visualization-and-comparison-of-sorting-algorithms">Kanasz Robert</a>&nbsp;&nbsp;&nbsp;翻译： <a href="http://blog.jobbole.com/"> 伯乐在线 </a> - <a href="http://blog.jobbole.com/author/s611785/">smilesisi</a><br>译文链接： <a href="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线.htm">http://blog.jobbole.com/72850/</a><br>[ <span style="color:#ff0000"><b>转载必须在正文中标注并保留原文链接、译文链接和译者等信息。</b></span>]<br><br>
	</div>
	<!-- END .entry -->






<!-- JiaThis Button BEGIN -->
<div class="jiathis_style_24x24">
<a class="jiathis_button_tsina" title="分享到新浪微博"><span class="jiathis_txt jtico jtico_tsina"></span></a>
<a class="jiathis_button_fb" title="分享到Facebook"><span class="jiathis_txt jtico jtico_fb"></span></a>
<a class="jiathis_button_weixin" title="分享到微信"><span class="jiathis_txt jtico jtico_weixin"></span></a>
<a class="jiathis_button_qzone" title="分享到QQ空间"><span class="jiathis_txt jtico jtico_qzone"></span></a>
<a class="jiathis_button_renren" title="分享到人人网"><span class="jiathis_txt jtico jtico_renren"></span></a>
<a class="jiathis_button_douban" title="分享到豆瓣"><span class="jiathis_txt jtico jtico_douban"></span></a>
<a class="jiathis_button_googleplus" title="分享到Google+"><span class="jiathis_txt jtico jtico_googleplus"></span></a>
<a class="jiathis_button_readitlater"></a>
<a class="jiathis_button_evernote" title="分享到EverNote"><span class="jiathis_txt jtico jtico_evernote"></span></a>
<a class="jiathis_button_ydnote" title="分享到有道云笔记"><span class="jiathis_txt jtico jtico_ydnote"></span></a>
<a href="http://www.jiathis.com/share?uid=1745061" class="jiathis jiathis_txt jiathis_separator jtico jtico_jiathis" target="_blank"></a>
<a class="jiathis_counter_style"><span class="jiathis_button_expanded jiathis_counter jiathis_bubble_style" id="jiathis_counter_105" title="累计分享46次">46</span></a>
</div>


<script type="text/javascript">
var jiathis_config={
	data_track_clickback:false,
	title:"《可视化对比十多种排序算法（C#版）》",
	summary:"排序算法是一种能将一串数据依照特定排序方式进行排列的一种算法。最常用到的排序方式是数值顺序以及字典顺序。在这篇文章中，我会向大家展示一些排序算法的可视化过程。我还写了一个工具，大家可对比查看某两种排序算法。",
	pic:"http://ww3.sinaimg.cn/mw690/7cc829d3gw1ei278e9zlpg205k05kq8u.gif || http://jbcdn2.b0.upaiyun.com/2013/04/jobbole-weixin.jpg || http://jbcdn2.b0.upaiyun.com/2013/12/Weixin-QR-code-for-Programming.jpg || http://jbcdn2.b0.upaiyun.com/2014/02/c5f8a8d26b2816c879ae2d176ded3bb3.jpg",
	appkey:{
                "tsina":2606191112
        },
	ralateuid:{
		"tsina":1670481425
	},
	hideMore:false
}
</script>
<script type="text/javascript" src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/jia.js" charset="utf-8"></script>
<!-- JiaThis Button END -->
<br><br>


</div>
<!-- END .post -->		
	<!-- BEGIN #author-bio -->

<div id="author-bio">
	
	<h3 class="widget-title">
	关于作者： <a href="http://blog.jobbole.com/author/s611785/">smilesisi</a>
	（ <a target="_blank" style="text-decoration: none;" href="http://www.jobbole.com/members/s611785">@s611785</a> ）
	</h3>
	<div class="alignleft">
		<a href="http://blog.jobbole.com/author/s611785/">
			<img src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/12831.thumbnail.jpg" alt="smilesisi" width="50" height="50" class="photo">		</a>
	</div>
	<p></p>
	<p>
		<a style="text-decoration: none;" href="http://blog.jobbole.com/author/s611785/">查看smilesisi的更多文章 &gt;&gt; </a>
	</p>
	<div class="clear"></div>
	
</div>

<!-- END #author-bio -->	
	
<div class="wp_rp_wrap  wp_rp_plain" id="wp_rp_first"><div class="wp_rp_content"><h3 class="related_post_title">相关文章</h3><ul class="related_post wp_rp" style="visibility: visible"><li><a href="http://blog.jobbole.com/11745/" class="wp_rp_title">视觉直观感受 7 种常用的排序算法</a></li><li><a href="http://blog.jobbole.com/52144/" class="wp_rp_title">编程面试的10大算法概念汇总</a></li><li><a href="http://blog.jobbole.com/42748/" class="wp_rp_title">iTunes 11 歌曲列表的着色算法是如何实现的？</a></li><li><a href="http://blog.jobbole.com/46985/" class="wp_rp_title">一个完美平衡照片库的算法</a></li><li><a href="http://blog.jobbole.com/18040/" class="wp_rp_title">Cate：我是如何准备Google面试的</a></li><li><a href="http://blog.jobbole.com/21928/" class="wp_rp_title">Simhash算法原理和网页查重应用</a></li><li><a href="http://blog.jobbole.com/8563/" class="wp_rp_title">骰子作画的算法 </a></li><li><a href="http://blog.jobbole.com/52830/" class="wp_rp_title">grep之字符串搜索算法Boyer-Moore由浅入深（比KMP快3-5倍）</a></li><li><a href="http://blog.jobbole.com/53406/" class="wp_rp_title">Reddit帝国建立在一个有瑕疵的算法之上</a></li><li><a href="http://blog.jobbole.com/70993/" class="wp_rp_title">位反转的最佳算法（C语言实现）</a></li></ul></div></div>
			
	
<!-- BEGIN #respond -->
<div id="respond">

	<h3 class="widget-title">发表评论</h3>
	
	<!-- BEGIN .cancel-comment-reply -->
	<p class="cancel-comment-reply">
		
		<a rel="nofollow" id="cancel-comment-reply-link" href="http://blog.jobbole.com/72850/#respond" style="display:none;">点击这里取消回复。</a>		
	</p>
	<!-- END .cancel-comment-reply -->

		
	<!-- BEGIN #comment-form -->
	<form action="http://blog.jobbole.com/wp-comments-post.php" method="post" id="comment-form">
		
		<fieldset>
		
			<legend class="none">Comment form</legend>
			
			<!-- BEGIN .container -->
			<div class="container">
			
							
				<div class="grid-4 margin-20">
					<label for="author">Name<span class="red">*</span></label>
				</div>
				
				<div class="grid-4 margin-20">
					<div class="input-wrapper"><input type="text" name="author" id="author" value="" tabindex="1" size="30" class="required" placeholder="姓名"></div>
				</div>
				<div class="clear"></div>
				
				<div class="grid-4 margin-20">
					<label for="email">邮箱<span class="red">*</span></label>
				</div>
				
				<div class="grid-4 margin-20">
					<div class="input-wrapper"><input type="email" name="email" id="email" value="" tabindex="2" size="30" class="required email" placeholder="请填写邮箱"></div>
				</div>
				<div class="clear"></div>
				
				<div class="grid-4 margin-20">
					<label for="url">网站 (请以 http://开头)</label>
				</div>
				
				<div class="grid-4 margin-20">
					<div class="input-wrapper"><input type="url" name="url" id="url" value="" tabindex="3" size="30" placeholder="请填写网站地址"></div>
				</div>
				<div class="clear"></div>
				
								
				<div class="grid-8 margin-20">
					<label for="comment" class="none margin-20">评论内容<span class="red">*</span></label>
					<div class="input-wrapper"><textarea name="comment" id="comment" rows="20" cols="30" class="required" tabindex="4" onkeydown="if(event.ctrlKey &amp;&amp; event.keyCode==13){document.getElementById(&#39;comment-form-submit&#39;).click(); return false;}" placeholder="请填写评论内容"></textarea></div>
				</div>
				<div class="clear"></div>
				
			</div>
			<!-- END .container -->
			
			<p>(<span class="red">*</span>) 表示必填项</p>
			<p></p><div class="submit-wrapper"><a id="comment-form-submit" class="submit">提交评论</a></div><p></p>
			<input type="hidden" name="comment_post_ID" value="72850" id="comment_post_ID">
<input type="hidden" name="comment_parent" id="comment_parent" value="0">
			<p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="728bdeeae3"></p>			
		</fieldset>
		
	</form>
	<!-- END #comment-form -->
	
	
</div>
<!-- END #respond -->


			<p class="nocomments none">还没有评论。</p>
	 

		
				
	<!-- BEGIN .navigation -->
	<div class="navigation margin-20">
	
		<div class="alignleft"><a href="http://blog.jobbole.com/72928/" rel="prev">« DDoS攻防战（二）：CC攻击工具实现与防御理论</a></div>
		<div class="alignright"><a href="http://blog.jobbole.com/73127/" rel="next">数据库的最简单实现 »</a></div>
		<div class="clear"></div>

	</div>
	<!-- END .navigation -->
	
		
</div>
<!-- END .grid-8 -->

<!-- BEGIN #sidebar -->
<div id="sidebar" class="grid-4">

	<div id="search-3" class="widget widget_search"><!-- BEGIN #searchform -->
<form method="get" id="searchform" action="http://blog.jobbole.com/">

	<label class="none" for="s">Search for:</label>
	<div class="input-wrapper"><input type="text" value="" name="s" id="s" placeholder="Search"></div>
	<input type="submit" id="searchsubmit" value="Search">
	
</form>
<!-- END #searchform --></div><div id="aw_tabbed_widget-8" class="widget aw_tabbed_widget"><div class="tabs"><ul class="nav clearfix"><li class="active"><a id="link-most-discussed" href="http://blog.jobbole.com/72850/#tab-most-discussed" title="本周热门文章">本周热门文章</a></li><li><a id="link-latest-comments" href="http://blog.jobbole.com/72850/#tab-latest-comments" title="本月热门文章">本月热门文章</a></li><li><a id="link-tags" href="http://blog.jobbole.com/72850/#tab-tags" title="热门标签">热门标签</a></li></ul><div id="tab-most-discussed" class="tab" style="display: block;"><div class="floated-thumb">							
							
							<!-- BEGIN .post-meta -->
							<div class="post-meta ">
							
								<p>
								    <span class="numb">0</span>
								    <a class="meta-title" target="_blank" href="http://blog.jobbole.com/72987/" title="为什么我不再用 .NET 框架">为什么我不再用 .NET 框架</a><br>
								</p>
									
							</div>
							<!-- END .post-meta -->
							
							<div class="clear"></div>
							
													
							
							<!-- BEGIN .post-meta -->
							<div class="post-meta  no-thumb">
							
								<p>
								    <span class="numb">1</span>
								    <a class="meta-title" target="_blank" href="http://blog.jobbole.com/72779/" title="你是否中了工程师文化的毒？">你是否中了工程师文化的毒？</a><br>
								</p>
									
							</div>
							<!-- END .post-meta -->
							
							<div class="clear"></div>
							
													
							
							<!-- BEGIN .post-meta -->
							<div class="post-meta  no-thumb">
							
								<p>
								    <span class="numb">2</span>
								    <a class="meta-title" target="_blank" href="http://blog.jobbole.com/70607/" title="谷歌大牛 Rob Pike 的 5 个编程原则">谷歌大牛 Rob Pike 的 5 个编程原则</a><br>
								</p>
									
							</div>
							<!-- END .post-meta -->
							
							<div class="clear"></div>
							
													
							
							<!-- BEGIN .post-meta -->
							<div class="post-meta ">
							
								<p>
								    <span class="numb">3</span>
								    <a class="meta-title" target="_blank" href="http://blog.jobbole.com/71414/" title="Dropbox 开源其 Go 语言库">Dropbox 开源其 Go 语言库</a><br>
								</p>
									
							</div>
							<!-- END .post-meta -->
							
							<div class="clear"></div>
							
													
							
							<!-- BEGIN .post-meta -->
							<div class="post-meta ">
							
								<p>
								    <span class="numb">4</span>
								    <a class="meta-title" target="_blank" href="http://blog.jobbole.com/73094/" title="C进阶指南（2）：数组和指针、打桩">C进阶指南（2）：数组和指针、打桩</a><br>
								</p>
									
							</div>
							<!-- END .post-meta -->
							
							<div class="clear"></div>
							
													
							
							<!-- BEGIN .post-meta -->
							<div class="post-meta  no-thumb">
							
								<p>
								    <span class="numb">5</span>
								    <a class="meta-title" target="_blank" href="http://blog.jobbole.com/72454/" title="美国码农故事：写代码获得陆军嘉奖奖章">美国码农故事：写代码获得陆军嘉奖奖章</a><br>
								</p>
									
							</div>
							<!-- END .post-meta -->
							
							<div class="clear"></div>
							
													
							
							<!-- BEGIN .post-meta -->
							<div class="post-meta  no-thumb">
							
								<p>
								    <span class="numb">6</span>
								    <a class="meta-title" target="_blank" href="http://blog.jobbole.com/72745/" title="Python，变调，电脑钢琴">Python，变调，电脑钢琴</a><br>
								</p>
									
							</div>
							<!-- END .post-meta -->
							
							<div class="clear"></div>
							
													
							
							<!-- BEGIN .post-meta -->
							<div class="post-meta  no-thumb">
							
								<p>
								    <span class="numb">7</span>
								    <a class="meta-title" target="_blank" href="http://blog.jobbole.com/73127/" title="数据库的最简单实现">数据库的最简单实现</a><br>
								</p>
									
							</div>
							<!-- END .post-meta -->
							
							<div class="clear"></div>
							
													
							
							<!-- BEGIN .post-meta -->
							<div class="post-meta  no-thumb">
							
								<p>
								    <span class="numb">8</span>
								    <a class="meta-title" target="_blank" href="http://blog.jobbole.com/73189/" title="每天专注三件事">每天专注三件事</a><br>
								</p>
									
							</div>
							<!-- END .post-meta -->
							
							<div class="clear"></div>
							
													
							
							<!-- BEGIN .post-meta -->
							<div class="post-meta  no-thumb">
							
								<p>
								    <span class="numb">9</span>
								    <a class="meta-title" target="_blank" href="http://blog.jobbole.com/70900/" title="周思博：软件面试实战指南（第三版）">周思博：软件面试实战指南（第三版）</a><br>
								</p>
									
							</div>
							<!-- END .post-meta -->
							
							<div class="clear"></div>
							
						</div></div><div id="tab-latest-comments" class="tab" style="display: none;"><div class="floated-thumb">							
											
							<!-- BEGIN .post-meta -->
							<div class="post-meta  no-thumb">
							
								<p>
								    <span class="numb">0</span>
								    <a class="meta-title" target="_blank" href="http://blog.jobbole.com/71346/" title="讨论：程序员高手和菜鸟的区别是什么？">讨论：程序员高手和菜鸟的区别是什么？</a><br>
								</p>
									
							</div>
							<!-- END .post-meta -->
							
							<div class="clear"></div>
							
													
											
							<!-- BEGIN .post-meta -->
							<div class="post-meta ">
							
								<p>
								    <span class="numb">1</span>
								    <a class="meta-title" target="_blank" href="http://blog.jobbole.com/72987/" title="为什么我不再用 .NET 框架">为什么我不再用 .NET 框架</a><br>
								</p>
									
							</div>
							<!-- END .post-meta -->
							
							<div class="clear"></div>
							
													
											
							<!-- BEGIN .post-meta -->
							<div class="post-meta  no-thumb">
							
								<p>
								    <span class="numb">2</span>
								    <a class="meta-title" target="_blank" href="http://blog.jobbole.com/72167/" title="IEEE Spectrum 发布 2014 年编程语言排行榜：Java 第一">IEEE Spectrum 2014 年编程语言排行榜</a><br>
								</p>
									
							</div>
							<!-- END .post-meta -->
							
							<div class="clear"></div>
							
													
											
							<!-- BEGIN .post-meta -->
							<div class="post-meta  no-thumb">
							
								<p>
								    <span class="numb">3</span>
								    <a class="meta-title" target="_blank" href="http://blog.jobbole.com/60900/" title="对比Ruby和Python的垃圾回收">对比Ruby和Python的垃圾回收</a><br>
								</p>
									
							</div>
							<!-- END .post-meta -->
							
							<div class="clear"></div>
							
													
											
							<!-- BEGIN .post-meta -->
							<div class="post-meta  no-thumb">
							
								<p>
								    <span class="numb">4</span>
								    <a class="meta-title" target="_blank" href="http://blog.jobbole.com/70956/" title="265行代码实现第一人称游戏引擎">265行代码实现第一人称游戏引擎</a><br>
								</p>
									
							</div>
							<!-- END .post-meta -->
							
							<div class="clear"></div>
							
													
											
							<!-- BEGIN .post-meta -->
							<div class="post-meta  no-thumb">
							
								<p>
								    <span class="numb">5</span>
								    <a class="meta-title" target="_blank" href="http://blog.jobbole.com/72663/" title="为什么开发一款操作系统就那么难？">为什么开发一款操作系统就那么难？</a><br>
								</p>
									
							</div>
							<!-- END .post-meta -->
							
							<div class="clear"></div>
							
													
											
							<!-- BEGIN .post-meta -->
							<div class="post-meta  no-thumb">
							
								<p>
								    <span class="numb">6</span>
								    <a class="meta-title" target="_blank" href="http://blog.jobbole.com/72104/" title="软件测试这四年">软件测试这四年</a><br>
								</p>
									
							</div>
							<!-- END .post-meta -->
							
							<div class="clear"></div>
							
													
											
							<!-- BEGIN .post-meta -->
							<div class="post-meta ">
							
								<p>
								    <span class="numb">7</span>
								    <a class="meta-title" target="_blank" href="http://blog.jobbole.com/72125/" title="趣味挑战：写一个 2 + 2 = 5 的程序">趣味挑战：写一个 2 + 2 = 5 的程序</a><br>
								</p>
									
							</div>
							<!-- END .post-meta -->
							
							<div class="clear"></div>
							
													
											
							<!-- BEGIN .post-meta -->
							<div class="post-meta ">
							
								<p>
								    <span class="numb">8</span>
								    <a class="meta-title" target="_blank" href="http://blog.jobbole.com/72156/" title="Layout Inflation不能这么用">Layout Inflation不能这么用</a><br>
								</p>
									
							</div>
							<!-- END .post-meta -->
							
							<div class="clear"></div>
							
													
											
							<!-- BEGIN .post-meta -->
							<div class="post-meta ">
							
								<p>
								    <span class="numb">9</span>
								    <a class="meta-title" target="_blank" href="http://blog.jobbole.com/72187/" title="码农故事：一个辞职创业卖凉皮的程序员">码农故事：一个辞职创业卖凉皮的程序员</a><br>
								</p>
									
							</div>
							<!-- END .post-meta -->
							
							<div class="clear"></div>
							
						</div></div><div id="tab-tags" class="tab" style="display: none;"><p><a href="http://blog.jobbole.com/tag/android/" class="tag-link-467" title="105 个话题" style="font-size: 14.289855072464px;">Android</a>
<a href="http://blog.jobbole.com/tag/apple/" class="tag-link-180" title="32 个话题" style="font-size: 9.1159420289855px;">apple</a>
<a href="http://blog.jobbole.com/tag/bug/" class="tag-link-218" title="45 个话题" style="font-size: 10.536231884058px;">Bug</a>
<a href="http://blog.jobbole.com/tag/cpp/" class="tag-link-807" title="35 个话题" style="font-size: 9.5217391304348px;">C++</a>
<a href="http://blog.jobbole.com/tag/chrome/" class="tag-link-527" title="27 个话题" style="font-size: 8.4057971014493px;">Chrome</a>
<a href="http://blog.jobbole.com/tag/css/" class="tag-link-711" title="53 个话题" style="font-size: 11.246376811594px;">CSS</a>
<a href="http://blog.jobbole.com/tag/c/" class="tag-link-757" title="90 个话题" style="font-size: 13.579710144928px;">C语言</a>
<a href="http://blog.jobbole.com/tag/facebook/" class="tag-link-164" title="92 个话题" style="font-size: 13.68115942029px;">Facebook</a>
<a href="http://blog.jobbole.com/tag/featuredpost/" class="tag-link-2241" title="360 个话题" style="font-size: 19.666666666667px;">featuredpost</a>
<a href="http://blog.jobbole.com/tag/git/" class="tag-link-885" title="43 个话题" style="font-size: 10.333333333333px;">Git</a>
<a href="http://blog.jobbole.com/tag/github/" class="tag-link-1253" title="48 个话题" style="font-size: 10.840579710145px;">Github</a>
<a href="http://blog.jobbole.com/tag/google/" class="tag-link-198" title="223 个话题" style="font-size: 17.536231884058px;">Google</a>
<a href="http://blog.jobbole.com/tag/html5/" class="tag-link-182" title="76 个话题" style="font-size: 12.869565217391px;">HTML5</a>
<a href="http://blog.jobbole.com/tag/ie/" class="tag-link-1531" title="33 个话题" style="font-size: 9.2173913043478px;">IE</a>
<a href="http://blog.jobbole.com/tag/ie-css-bug/" class="tag-link-2785" title="31 个话题" style="font-size: 9.0144927536232px;">IE CSS Bug</a>
<a href="http://blog.jobbole.com/tag/ios/" class="tag-link-860" title="202 个话题" style="font-size: 17.130434782609px;">iOS</a>
<a href="http://blog.jobbole.com/tag/it/" class="tag-link-513" title="43 个话题" style="font-size: 10.333333333333px;">IT</a>
<a href="http://blog.jobbole.com/tag/java/" class="tag-link-457" title="127 个话题" style="font-size: 15.101449275362px;">java</a>
<a href="http://blog.jobbole.com/tag/javascript/" class="tag-link-683" title="230 个话题" style="font-size: 17.63768115942px;">Javascript</a>
<a href="http://blog.jobbole.com/tag/jquery/" class="tag-link-459" title="54 个话题" style="font-size: 11.347826086957px;">jQuery</a>
<a href="http://blog.jobbole.com/tag/linux/" class="tag-link-190" title="117 个话题" style="font-size: 14.695652173913px;">Linux</a>
<a href="http://blog.jobbole.com/tag/mysql/" class="tag-link-191" title="32 个话题" style="font-size: 9.1159420289855px;">MySQL</a>
<a href="http://blog.jobbole.com/tag/node-js/" class="tag-link-896" title="38 个话题" style="font-size: 9.8260869565217px;">Node.js</a>
<a href="http://blog.jobbole.com/tag/objective-c/" class="tag-link-829" title="28 个话题" style="font-size: 8.5072463768116px;">Objective-C</a>
<a href="http://blog.jobbole.com/tag/php/" class="tag-link-168" title="67 个话题" style="font-size: 12.260869565217px;">php</a>
<a href="http://blog.jobbole.com/tag/python/" class="tag-link-663" title="122 个话题" style="font-size: 14.898550724638px;">Python</a>
<a href="http://blog.jobbole.com/tag/ruby/" class="tag-link-647" title="34 个话题" style="font-size: 9.3188405797101px;">Ruby</a>
<a href="http://blog.jobbole.com/tag/soho/" class="tag-link-153" title="39 个话题" style="font-size: 9.9275362318841px;">soho</a>
<a href="http://blog.jobbole.com/tag/tiobe/" class="tag-link-1493" title="30 个话题" style="font-size: 8.8115942028986px;">TIOBE</a>
<a href="http://blog.jobbole.com/tag/twitter/" class="tag-link-419" title="31 个话题" style="font-size: 9.0144927536232px;">Twitter</a>
<a href="http://blog.jobbole.com/tag/ui/" class="tag-link-1143" title="25 个话题" style="font-size: 8px;">UI</a>
<a href="http://blog.jobbole.com/tag/web-fundamentals/" class="tag-link-3560" title="36 个话题" style="font-size: 9.6231884057971px;">web fundamentals</a>
<a href="http://blog.jobbole.com/tag/web%e5%bc%80%e5%8f%91/" class="tag-link-493" title="110 个话题" style="font-size: 14.492753623188px;">Web开发</a>
<a href="http://blog.jobbole.com/tag/%e4%b9%94%e5%b8%83%e6%96%af/" class="tag-link-301" title="31 个话题" style="font-size: 9.0144927536232px;">乔布斯</a>
<a href="http://blog.jobbole.com/tag/%e4%b9%a6%e7%b1%8d/" class="tag-link-1022" title="39 个话题" style="font-size: 9.9275362318841px;">书籍</a>
<a href="http://blog.jobbole.com/tag/%e4%ba%92%e8%81%94%e7%bd%91/" class="tag-link-40" title="80 个话题" style="font-size: 13.072463768116px;">互联网</a>
<a href="http://blog.jobbole.com/tag/%e4%ba%a4%e4%ba%92%e8%ae%be%e8%ae%a1/" class="tag-link-648" title="58 个话题" style="font-size: 11.652173913043px;">交互设计</a>
<a href="http://blog.jobbole.com/tag/%e4%ba%a7%e5%93%81/" class="tag-link-522" title="56 个话题" style="font-size: 11.550724637681px;">产品</a>
<a href="http://blog.jobbole.com/tag/%e4%ba%a7%e5%93%81%e7%bb%8f%e7%90%86/" class="tag-link-549" title="43 个话题" style="font-size: 10.333333333333px;">产品经理</a>
<a href="http://blog.jobbole.com/tag/%e4%ba%a7%e5%93%81%e8%ae%be%e8%ae%a1/" class="tag-link-657" title="25 个话题" style="font-size: 8px;">产品设计</a>
<a href="http://blog.jobbole.com/tag/%e4%bb%a3%e7%a0%81/" class="tag-link-489" title="87 个话题" style="font-size: 13.376811594203px;">代码</a>
<a href="http://blog.jobbole.com/tag/%e4%bc%af%e4%b9%90%e5%91%a8%e5%88%8a/" class="tag-link-1576" title="29 个话题" style="font-size: 8.7101449275362px;">伯乐周刊</a>
<a href="http://blog.jobbole.com/tag/startup/" class="tag-link-4" title="193 个话题" style="font-size: 16.927536231884px;">创业</a>
<a href="http://blog.jobbole.com/tag/%e5%89%8d%e7%ab%af/" class="tag-link-1138" title="57 个话题" style="font-size: 11.550724637681px;">前端</a>
<a href="http://blog.jobbole.com/tag/%e5%89%8d%e7%ab%af%e5%bc%80%e5%8f%91/" class="tag-link-775" title="31 个话题" style="font-size: 9.0144927536232px;">前端开发</a>
<a href="http://blog.jobbole.com/tag/%e5%9b%a2%e9%98%9f/" class="tag-link-551" title="53 个话题" style="font-size: 11.246376811594px;">团队</a>
<a href="http://blog.jobbole.com/tag/%e5%a4%a7%e6%95%b0%e6%8d%ae/" class="tag-link-884" title="28 个话题" style="font-size: 8.5072463768116px;">大数据</a>
<a href="http://blog.jobbole.com/tag/%e5%a5%b3%e7%a8%8b%e5%ba%8f%e5%91%98/" class="tag-link-1460" title="43 个话题" style="font-size: 10.333333333333px;">女程序员</a>
<a href="http://blog.jobbole.com/tag/%e5%a8%81%e5%ae%a2/" class="tag-link-129" title="40 个话题" style="font-size: 10.028985507246px;">威客</a>
<a href="http://blog.jobbole.com/tag/%e5%ae%89%e5%85%a8/" class="tag-link-1214" title="92 个话题" style="font-size: 13.68115942029px;">安全</a>
<a href="http://blog.jobbole.com/tag/%e5%ae%89%e5%8d%93%e5%bc%80%e5%8f%91/" class="tag-link-3362" title="43 个话题" style="font-size: 10.333333333333px;">安卓开发</a>
<a href="http://blog.jobbole.com/tag/%e5%ae%a2%e6%88%b7/" class="tag-link-174" title="49 个话题" style="font-size: 10.942028985507px;">客户</a>
<a href="http://blog.jobbole.com/tag/%e5%b7%a5%e5%85%b7/" class="tag-link-18" title="102 个话题" style="font-size: 14.086956521739px;">工具</a>
<a href="http://blog.jobbole.com/tag/%e5%b7%a5%e7%a8%8b%e5%b8%88/" class="tag-link-470" title="29 个话题" style="font-size: 8.7101449275362px;">工程师</a>
<a href="http://blog.jobbole.com/tag/%e5%bb%ba%e8%ae%ae/" class="tag-link-512" title="31 个话题" style="font-size: 9.0144927536232px;">建议</a>
<a href="http://blog.jobbole.com/tag/%e5%bc%80%e5%8f%91%e4%ba%ba%e5%91%98/" class="tag-link-370" title="125 个话题" style="font-size: 15px;">开发人员</a>
<a href="http://blog.jobbole.com/tag/%e5%bc%80%e6%ba%90/" class="tag-link-196" title="66 个话题" style="font-size: 12.260869565217px;">开源</a>
<a href="http://blog.jobbole.com/tag/%e5%be%ae%e8%bd%af/" class="tag-link-429" title="69 个话题" style="font-size: 12.463768115942px;">微软</a>
<a href="http://blog.jobbole.com/tag/%e6%89%8b%e6%9c%ba%e5%ba%94%e7%94%a8/" class="tag-link-556" title="28 个话题" style="font-size: 8.5072463768116px;">手机应用</a>
<a href="http://blog.jobbole.com/tag/%e6%8b%9b%e8%81%98/" class="tag-link-326" title="45 个话题" style="font-size: 10.536231884058px;">招聘</a>
<a href="http://blog.jobbole.com/tag/%e6%8f%92%e4%bb%b6/" class="tag-link-569" title="25 个话题" style="font-size: 8px;">插件</a>
<a href="http://blog.jobbole.com/tag/%e6%95%88%e7%8e%87/" class="tag-link-415" title="34 个话题" style="font-size: 9.3188405797101px;">效率</a>
<a href="http://blog.jobbole.com/tag/%e6%95%b0%e6%8d%ae%e5%ba%93/" class="tag-link-353" title="42 个话题" style="font-size: 10.231884057971px;">数据库</a>
<a href="http://blog.jobbole.com/tag/%e6%97%b6%e9%97%b4%e7%ae%a1%e7%90%86/" class="tag-link-271" title="35 个话题" style="font-size: 9.5217391304348px;">时间管理</a>
<a href="http://blog.jobbole.com/tag/%e6%9c%8d%e5%8a%a1%e5%99%a8/" class="tag-link-311" title="29 个话题" style="font-size: 8.7101449275362px;">服务器</a>
<a href="http://blog.jobbole.com/tag/%e6%9e%b6%e6%9e%84/" class="tag-link-603" title="34 个话题" style="font-size: 9.3188405797101px;">架构</a>
<a href="http://blog.jobbole.com/tag/%e6%a1%86%e6%9e%b6/" class="tag-link-804" title="25 个话题" style="font-size: 8px;">框架</a>
<a href="http://blog.jobbole.com/tag/%e6%b1%82%e8%81%8c/" class="tag-link-172" title="30 个话题" style="font-size: 8.8115942028986px;">求职</a>
<a href="http://blog.jobbole.com/tag/%e6%b5%8b%e8%af%95/" class="tag-link-678" title="76 个话题" style="font-size: 12.869565217391px;">测试</a>
<a href="http://blog.jobbole.com/tag/%e6%b5%8b%e8%af%95%e4%ba%ba%e5%91%98/" class="tag-link-778" title="27 个话题" style="font-size: 8.4057971014493px;">测试人员</a>
<a href="http://blog.jobbole.com/tag/%e6%b5%8f%e8%a7%88%e5%99%a8/" class="tag-link-63" title="46 个话题" style="font-size: 10.63768115942px;">浏览器</a>
<a href="http://blog.jobbole.com/tag/%e6%b8%b8%e6%88%8f/" class="tag-link-797" title="48 个话题" style="font-size: 10.840579710145px;">游戏</a>
<a href="http://blog.jobbole.com/tag/%e7%94%a8%e6%88%b7/" class="tag-link-460" title="55 个话题" style="font-size: 11.449275362319px;">用户</a>
<a href="http://blog.jobbole.com/tag/%e7%94%a8%e6%88%b7%e4%bd%93%e9%aa%8c/" class="tag-link-580" title="92 个话题" style="font-size: 13.68115942029px;">用户体验</a>
<a href="http://blog.jobbole.com/tag/%e7%a0%81%e5%86%9c%e6%95%85%e4%ba%8b/" class="tag-link-2863" title="55 个话题" style="font-size: 11.449275362319px;">码农故事</a>
<a href="http://blog.jobbole.com/tag/%e7%a7%bb%e5%8a%a8%e5%ba%94%e7%94%a8/" class="tag-link-654" title="62 个话题" style="font-size: 11.95652173913px;">移动应用</a>
<a href="http://blog.jobbole.com/tag/%e7%a8%8b%e5%ba%8f%e5%91%98/" class="tag-link-368" title="621 个话题" style="font-size: 22px;">程序员</a>
<a href="http://blog.jobbole.com/tag/%e7%ae%97%e6%b3%95/" class="tag-link-650" title="78 个话题" style="font-size: 12.971014492754px;">算法</a>
<a href="http://blog.jobbole.com/tag/management/" class="tag-link-32" title="33 个话题" style="font-size: 9.2173913043478px;">管理</a>
<a href="http://blog.jobbole.com/tag/%e7%bc%96%e7%a8%8b/" class="tag-link-389" title="118 个话题" style="font-size: 14.797101449275px;">编程</a>
<a href="http://blog.jobbole.com/tag/%e7%bc%96%e7%a8%8b%e8%af%ad%e8%a8%80/" class="tag-link-596" title="108 个话题" style="font-size: 14.391304347826px;">编程语言</a>
<a href="http://blog.jobbole.com/tag/%e7%bc%96%e7%a8%8b%e8%af%ad%e8%a8%80%e6%8e%92%e8%a1%8c%e6%a6%9c/" class="tag-link-1621" title="34 个话题" style="font-size: 9.3188405797101px;">编程语言排行榜</a>
<a href="http://blog.jobbole.com/tag/%e7%bd%91%e7%ab%99/" class="tag-link-150" title="30 个话题" style="font-size: 8.8115942028986px;">网站</a>
<a href="http://blog.jobbole.com/tag/%e7%bd%91%e9%a1%b5%e8%ae%be%e8%ae%a1/" class="tag-link-454" title="69 个话题" style="font-size: 12.463768115942px;">网页设计</a>
<a href="http://blog.jobbole.com/tag/%e8%81%8c%e5%9c%ba/" class="tag-link-253" title="173 个话题" style="font-size: 16.420289855072px;">职场</a>
<a href="http://blog.jobbole.com/tag/%e8%87%aa%e7%94%b1%e8%81%8c%e4%b8%9a/" class="tag-link-315" title="127 个话题" style="font-size: 15.101449275362px;">自由职业</a>
<a href="http://blog.jobbole.com/tag/translation/" class="tag-link-49" title="40 个话题" style="font-size: 10.028985507246px;">英语</a>
<a href="http://blog.jobbole.com/tag/%e8%8b%b9%e6%9e%9c/" class="tag-link-183" title="46 个话题" style="font-size: 10.63768115942px;">苹果</a>
<a href="http://blog.jobbole.com/tag/%e8%90%a5%e9%94%80/" class="tag-link-262" title="34 个话题" style="font-size: 9.3188405797101px;">营销</a>
<a href="http://blog.jobbole.com/tag/%e8%a5%bf%e8%a5%bf%e5%90%b9%e9%9b%aa/" class="tag-link-2282" title="29 个话题" style="font-size: 8.7101449275362px;">西西吹雪</a>
<a href="http://blog.jobbole.com/tag/%e8%ae%be%e8%ae%a1/" class="tag-link-431" title="118 个话题" style="font-size: 14.797101449275px;">设计</a>
<a href="http://blog.jobbole.com/tag/%e8%ae%be%e8%ae%a1%e5%b8%88/" class="tag-link-436" title="94 个话题" style="font-size: 13.782608695652px;">设计师</a>
<a href="http://blog.jobbole.com/tag/%e8%b6%a3%e6%96%87/" class="tag-link-2105" title="33 个话题" style="font-size: 9.2173913043478px;">趣文</a>
<a href="http://blog.jobbole.com/tag/%e8%bd%af%e4%bb%b6/" class="tag-link-170" title="27 个话题" style="font-size: 8.4057971014493px;">软件</a>
<a href="http://blog.jobbole.com/tag/%e8%bd%af%e4%bb%b6%e5%b7%a5%e7%a8%8b%e5%b8%88/" class="tag-link-400" title="37 个话题" style="font-size: 9.7246376811594px;">软件工程师</a>
<a href="http://blog.jobbole.com/tag/%e8%bd%af%e4%bb%b6%e5%bc%80%e5%8f%91/" class="tag-link-38" title="64 个话题" style="font-size: 12.057971014493px;">软件开发</a>
<a href="http://blog.jobbole.com/tag/%e9%9d%a2%e8%af%95/" class="tag-link-173" title="90 个话题" style="font-size: 13.579710144928px;">面试</a>
<a href="http://blog.jobbole.com/tag/%e9%a1%b9%e7%9b%ae/" class="tag-link-177" title="38 个话题" style="font-size: 9.8260869565217px;">项目</a>
<a href="http://blog.jobbole.com/tag/%e9%a1%b9%e7%9b%ae%e7%bb%8f%e7%90%86/" class="tag-link-1049" title="37 个话题" style="font-size: 9.7246376811594px;">项目经理</a>
<a href="http://blog.jobbole.com/tag/%e9%bb%91%e5%ae%a2/" class="tag-link-617" title="47 个话题" style="font-size: 10.739130434783px;">黑客</a></p></div></div></div><div id="text-19" class="widget widget_text"><h3 class="widget-title">推荐关注</h3>			<div class="textwidget"><div class="floated-thumb">
<div class="post-thumb">
                <a href="http://www.jikexueyuan.com/course/34.html?hmsr=job_word_flappybird" target="_blank"><img src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/89044c7d71f0edd741e1a0b0ecf96243.jpg" width="50" height="50" class="attachment-grid-1 wp-post-image"></a>
        </div>
<div class="post-meta">
<p><a class="meta-title" href="http://www.jikexueyuan.com/course/34.html?hmsr=job_word_flappybird" target="_blank">Flappy Bird 1小时开发教程</a><br> 全球最热手游，1小时学会开发经典版，上线1周超过1万人在线学习！</p>
<p></p></div>
<div class="clear"></div>
</div>
<div class="floated-thumb">
<div class="post-thumb">
                <a href="http://www.jikexueyuan.com/course/124.html?hmsr=job_word_material" target="_blank"><img src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/4b29270ef2b5497dcb4296d6b5db43ae.jpg" width="50" height="50" class="attachment-grid-1 wp-post-image"></a>
        </div>
<div class="post-meta">
<p><a class="meta-title" href="http://www.jikexueyuan.com/course/124.html?hmsr=job_word_material" target="_blank">Material Design 设计语言详解</a><br> Google I/O 最新发布，媲美苹果的设计语言，未来将一统谷哥所有应用平台！</p>
<p></p></div>
<div class="clear"></div>
</div>
<div class="floated-thumb">
<div class="post-thumb">
                <a href="http://www.jikexueyuan.com/path/android/?hmsr=job_word_android" target="_blank"><img src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/e5bb91f253000fa7862f448fc981b8f51.png" width="50" height="50" class="attachment-grid-1 wp-post-image"></a>
        </div>
<div class="post-meta">
<p><a class="meta-title" href="http://www.jikexueyuan.com/path/android/?hmsr=job_word_android" target="_blank">3个月成为Android开发攻城狮</a><br> 移动互联网最时髦的职业，名企需求量极大，薪资10k-25k/月，不缺高薪缺人才！</p>
<p></p></div>
<div class="clear"></div>
</div>
<div class="floated-thumb">
<div class="post-thumb">
                <a href="http://www.imooc.com/view/40?utm_source=jobboleblog" target="_blank"><img src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/f4266250244dbae04cecaec95aeac2b2.png" width="50" height="50" class="attachment-grid-1 wp-post-image"></a>
        </div>
<div class="post-meta">
<p><a class="meta-title" href="http://www.imooc.com/view/40?utm_source=jobboleblog" target="_blank">前端开发利器—Sublime Text</a><br> 对Sublime Text这款前端开发工具中的非常优秀的特性进行深度讲解。</p>
<p></p></div>
<div class="clear"></div>
</div>
<div class="floated-thumb">
<div class="post-thumb">
                <a href="http://www.imooc.com/view/137?utm_source=jobboleblog" target="_blank"><img src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/5922e9c9894ee252005cfc771e8a6b85.png" width="50" height="50" class="attachment-grid-1 wp-post-image"></a>
        </div>
<div class="post-meta">
<p><a class="meta-title" href="http://www.imooc.com/view/137?utm_source=jobboleblog" target="_blank">深度解析WEB调试神器—Firebug</a><br> 从各个不同的角度剖析Web页面内部的细节，给Web开发带来极大的便利。</p>
<p></p></div>
<div class="clear"></div>
</div>
</div>
		</div><div id="recent_comments_widget-3" class="widget recent_comments_widget">		<h3 class="widget-title">最新评论（期待您也参与评论）</h3>
		<ul>
		
					
			<li id="rc-comment-59085" class="rc-item rc-comment rc-clearfix">
				<img class="rc-avatar rc-left" width="32" height="32" alt="" src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/2739df282aa2427b46b80057b39b0ca2-bpthumb.jpg">
				<div class="rc-info">
				Re:
				<a class="rc-post" target="_blank" href="http://blog.jobbole.com/72987/#comment-59085" rel="nofollow">为什么我不再用 .NET 框架</a>
				</div>
				<div class="rc-timestamp"></div>
				<div class="rc-excerpt">
				翻译得还可以吧，没有评论所说的那么差								<span class="rc-reviewer"> 小楼吹彻玉笙寒</span>
								</div>
			</li>
			
						
			<li id="rc-comment-59084" class="rc-item rc-comment rc-clearfix">
				<img class="rc-avatar rc-left" width="32" height="32" alt="" src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/fcbc2360cb32f6dc2534fb489ada4d76">
				<div class="rc-info">
				Re:
				<a class="rc-post" target="_blank" href="http://blog.jobbole.com/73189/#comment-59084" rel="nofollow">每天专注三件事</a>
				</div>
				<div class="rc-timestamp"></div>
				<div class="rc-excerpt">
				这是事情不够多的人说的话吧……每天一群测试、产品、美工还有各种boss来找你加需求、挑UI问题、提b...								<span class="rc-reviewer"> afpro</span>
								</div>
			</li>
			
						
			<li id="rc-comment-59082" class="rc-item rc-comment rc-clearfix">
				<img class="rc-avatar rc-left" width="32" height="32" alt="" src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/ccf35a614b4d81e19b0198dc2552bd86">
				<div class="rc-info">
				Re:
				<a class="rc-post" target="_blank" href="http://blog.jobbole.com/70549/#comment-59082" rel="nofollow">如果看了此文你还不懂傅里叶变换，那就过来掐死我吧【完整版】</a>
				</div>
				<div class="rc-timestamp"></div>
				<div class="rc-excerpt">
				很厉害								<span class="rc-reviewer"> 婷婷</span>
								</div>
			</li>
			
						
			<li id="rc-comment-59078" class="rc-item rc-comment rc-clearfix">
				<img class="rc-avatar rc-left" width="32" height="32" alt="" src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/3551c8026da090062e0befc34f97d04e-bpthumb.jpg">
				<div class="rc-info">
				Re:
				<a class="rc-post" target="_blank" href="http://blog.jobbole.com/64168/#comment-59078" rel="nofollow">请尊重测试：测试从业五年有感</a>
				</div>
				<div class="rc-timestamp"></div>
				<div class="rc-excerpt">
				说的很好呢。								<span class="rc-reviewer"> janie</span>
								</div>
			</li>
			
						
			<li id="rc-comment-59077" class="rc-item rc-comment rc-clearfix">
				<img class="rc-avatar rc-left" width="32" height="32" alt="" src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/b0470cfb7a297c897e48d6c9ddd361a1">
				<div class="rc-info">
				Re:
				<a class="rc-post" target="_blank" href="http://blog.jobbole.com/65218/#comment-59077" rel="nofollow">Python中的高级数据结构</a>
				</div>
				<div class="rc-timestamp"></div>
				<div class="rc-excerpt">
				这篇文章在Reddit被喷了：http://www.reddit.com/r/Python/comm...									<a class="rc-reviewer" target="_blank" href="http://fclef.wordpress.com/" rel="nofollow external"> TestBugs</a>
								</div>
			</li>
			
						
			<li id="rc-comment-59072" class="rc-item rc-comment rc-clearfix">
				<img class="rc-avatar rc-left" width="32" height="32" alt="" src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/e2c2eae5b65819285a9e405f41f05519">
				<div class="rc-info">
				Re:
				<a class="rc-post" target="_blank" href="http://blog.jobbole.com/73094/#comment-59072" rel="nofollow">C进阶指南（2）：数组和指针、打桩</a>
				</div>
				<div class="rc-timestamp"></div>
				<div class="rc-excerpt">
				“除非它是sizeof或一元&amp;运算符，再或者它是用于初始化数组的字符文本，否则有着“数组”的...									<a class="rc-reviewer" target="_blank" href="http://weibo.com/2781971343/profile?topnav=1&wvr=5&user=1" rel="nofollow external"> 薛非</a>
								</div>
			</li>
			
						
			<li id="rc-comment-59064" class="rc-item rc-comment rc-clearfix">
				<img class="rc-avatar rc-left" width="32" height="32" alt="" src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/4fd4ee279df959bbd2f488b0ef23a894">
				<div class="rc-info">
				Re:
				<a class="rc-post" target="_blank" href="http://blog.jobbole.com/73094/#comment-59064" rel="nofollow">C进阶指南（2）：数组和指针、打桩</a>
				</div>
				<div class="rc-timestamp"></div>
				<div class="rc-excerpt">
				待小的找到编辑本文的界面，就在文章难理解的部位加中英文对照。								<span class="rc-reviewer"> 醉酒屠夫</span>
								</div>
			</li>
			
						
			<li id="rc-comment-59043" class="rc-item rc-comment rc-clearfix">
				<img class="rc-avatar rc-left" width="32" height="32" alt="" src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/14efed927751468d7fcd0454013c8141">
				<div class="rc-info">
				Re:
				<a class="rc-post" target="_blank" href="http://blog.jobbole.com/72125/#comment-59043" rel="nofollow">趣味挑战：写一个 2 + 2 = 5 的程序</a>
				</div>
				<div class="rc-timestamp"></div>
				<div class="rc-excerpt">
				c#版int a = 2;int b = 2;return  (a &lt;&gt; 1);								<span class="rc-reviewer"> 萝卜</span>
								</div>
			</li>
			
					
		</ul>
        </div><div id="text-20" class="widget widget_text">			<div class="textwidget"><p><script async="" src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/adsbygoogle.js"></script><ins class="adsbygoogle" style="display:inline-block;width:300px;height:250px" data-ad-client="ca-pub-7056282119617872" data-ad-slot="8418538291" data-adsbygoogle-status="done"><ins style="display:inline-table;border:none;height:250px;margin:0;padding:0;position:relative;visibility:visible;width:300px;background-color:transparent"><ins id="aswift_1_anchor" style="display:block;border:none;height:250px;margin:0;padding:0;position:relative;visibility:visible;width:300px;background-color:transparent"><iframe width="300" height="250" frameborder="0" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){try{h=s.upd(h,i)}catch(e){}w.location.replace(h)}}" id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;"></iframe></ins></ins></ins><script> (adsbygoogle = window.adsbygoogle || []).push({}); </script></p>
</div>
		</div><div id="text-9" class="widget widget_text"><h3 class="widget-title">热点文章推荐</h3>			<div class="textwidget"><div class="floated-thumb">
<div class="post-thumb">
                <a href="http://www.geekfan.net/1451/" target="_blank"><img src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/9af64aea39718ed28fc41bd4b6bb9287.png" class="attachment-grid-1 wp-post-image"></a>
        </div>
<div class="post-meta">
<p><a class="meta-title" href="http://www.geekfan.net/1451/" target="_blank">敢偷用我的WiFi？ 看我怎么治你</a><br> 邻居盗用我的WiFi，可以直接选择加密口令，或者…作为一名极客也可以耍耍他。</p>
<p></p></div>
<div class="clear"></div>
</div>
<div class="floated-thumb">
<div class="post-thumb">
                <a href="http://www.geekfan.net/4920/" target="_blank"><img src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/2a3478874397c721630420c465d1978e.jpg" class="attachment-grid-1 wp-post-image"></a>
        </div>
<div class="post-meta">
<p><a class="meta-title" href="http://www.geekfan.net/4920/" target="_blank">你的电脑在偷偷连接什么网站？</a><br> 大家都有过网络连接变慢的经历吧？让我们一块儿揪出这些小东西吧。</p>
<p></p></div>
<div class="clear"></div>
</div>
<div class="floated-thumb">
<div class="post-thumb">
                <a href="http://www.importnew.com/7980.html" target="_blank"><img src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/54f410f19da1e4794374c54bdc7e2523.jpg" class="attachment-grid-1 wp-post-image"></a>
        </div>
<div class="post-meta">
<p><a class="meta-title" href="http://www.importnew.com/7980.html" target="_blank">Java开发牛人十大必备网站</a><br>对于Java开发牛人来说，网站的好坏取决于如何使用它们。</p>
<p></p></div>
<div class="clear"></div>
</div>
<div class="floated-thumb">
<div class="post-thumb">
                <a href="http://www.importnew.com/7469.html" target="_blank"><img src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/3628c00234b56ae208e1bed14b343e92.jpg" class="attachment-grid-1 wp-post-image"></a>
        </div>
<div class="post-meta">
<p><a class="meta-title" href="http://www.importnew.com/7469.html" target="_blank">100个高质量Java开发者博客</a><br>收集全球范围内100个高质量Java开发者博客。</p>
<p></p></div>
<div class="clear"></div>
</div>
</div>
		</div>	
	<!-- BEGIN .container -->
	<div class="container">
	
		<!-- BEGIN .grid-2 -->
		<div class="grid-2">
			
						
		</div>
		<!-- END .grid-2 -->
		
		<!-- BEGIN .grid-2 -->
		<div class="grid-2">
			
						
		</div>
		<!-- END .grid-2 -->
		
		<div class="clear"></div>
			
	</div>
	<!-- END .container -->

</div>
<!-- END #sidebar -->
<div class="clear"></div>	


</div>
<!-- END #wrapper -->

<!-- BEGIN footer -->
<footer>

	<!-- BEGIN .container -->
	<div class="container">
		
		<!-- BEGIN .grid-4 -->
		<div class="grid-4">
			
			<div id="text-3" class="widget widget_text"><h3 class="widget-title">关于伯乐在线博客</h3>			<div class="textwidget"><p>在这个信息爆炸的时代，人们已然被大量、快速并且简短的信息所包围。然而，我们相信：过多“快餐”式的阅读只会令人“虚胖”，缺乏实质的内涵。伯乐在线博客团队正试图以我们微薄的力量，把优秀的原创/译文分享给读者，为“快餐”添加一些“营养”元素。</p>
<p>伯乐在线-博客( blog.JobBole.com )专注于分享职业相关的博客文章、业界资讯和职业相关的优秀工具和资源。博文类别包括：程序员、设计、营销、互联网、IT技术、自由职业、创业、运营、管理、翻译和人力资源等等。期待您通过<a href="http://blog.jobbole.com/feed/">RSS订阅</a>和<a href="http://weibo.com/jobbole">微博</a>关注我们。如果您也愿意<a href="http://blog.jobbole.com/tougao">分享一份自己的原创/译文</a>，可以<a href="http://blog.jobbole.com/tougao">从这里开始</a>～</p>
</div>
		</div>			
		</div>
		<!-- END .grid-4 -->
		
		<!-- BEGIN .grid-4 -->
		<div class="grid-4">
			
			<div id="text-7" class="widget widget_text"><h3 class="widget-title">联系我们</h3>			<div class="textwidget"><p><strong>网站合作和广告投放</strong></p>
<p>联系邮箱：Webmaster (at) JobBole.com<br>
QQ： 630772296  （加好友请注明来意）<br>
交换友情链接要求：PR&gt;=4</p>
<p><strong>网站使用问题</strong></p>
<p>请直接在<a target="_blank" href="http://www.jobbole.com/forums/forum/feedback/">这里发帖</a>询问或者反馈</p>
</div>
		</div>			
		</div>
		<!-- END .grid-4 -->
		
		<!-- BEGIN .grid-4 -->
		<div class="grid-4">
			
			<div id="text-4" class="widget widget_text"><h3 class="widget-title">欢迎关注并订阅伯乐在线博客</h3>			<div class="textwidget"><div id="aw_socialcounter_widget-2" class="widget aw_socialcounter_widget">
<ul>
<li>
<a target="_blank" href="http://weibo.com/jobbole"><img class="alignleft" src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/sina_32.png" alt="关注我们的新浪微博" title="关注我们的新浪微博"></a><p></p>
<div class="view-rss"><a target="_blank" href="http://blog.jobbole.com/feed/" class="rss-link"><img class="alignleft" src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/rss_32.png" alt="RSS订阅" title="RSS订阅"></a></div>
<p><a target="_blank" href="http://list.qq.com/cgi-bin/qf_invite?id=f12eb90e095ea83b9c0683e2822949378899f8628c96050b"><img class="alignleft" src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/email_32.png" alt="邮件订阅" title="邮件订阅"></a>
</p></li>
</ul>
</div>
<p><br><br>
<script language="javascript"> 
var randomNum = Math.round(Math.random()*4);
var image=new Array(5);
image[0]="design-weixin-logo.jpg";
image[1]="jobbole-weixin-logo.jpg";
image[2]="programmer-weixin-logo.jpg";
image[3]="geekfan-weixin.png";
image[4]="importnew-weixin.png";
var imageUrl="http://blog.jobbole.com/wp-content/themes/jobboleblogv3/_assets/img/"+image[randomNum];
var titles=new Array(5);
titles[0]="扫描关注设计的那些事，微信号：AboutDesigner";
titles[1]="扫描关注伯乐在线，微信号：Jobbole";
titles[2]="扫描关注程序员的那些事，微信号：iProgrammer";
titles[3]="扫描关注极客范，微信号：iGeekFan";
titles[4]="扫描关注ImportNew，微信号：importnew";
var imageTitle = titles[randomNum];
var adHTML = "<img src='"+imageUrl+"' title='"+imageTitle+"' alt='"+imageTitle+"' border='0'>";
document.write(adHTML);
</script><img src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/geekfan-weixin.png" title="扫描关注极客范，微信号：iGeekFan" alt="扫描关注极客范，微信号：iGeekFan" border="0"></p>
</div>
		</div>			
		</div>
		<!-- END .grid-4 -->
		
		<div class="clear"></div>
	
	</div>
	<!-- END .container -->

	<!-- BEGIN #bottom -->
	<div id="bottom">
	
		<!-- BEGIN .container -->
		<div class="container">
		
			<!-- BEGIN .grid-12 -->
			<div class="grid-12">
	
				<p>© 2014 <a href="http://blog.jobbole.com/">博客 – 伯乐在线</a>. <a href="http://www.miibeian.gov.cn/" target="_blank" rel="nofollow">京ICP备10038840号</a> <span style="float:right; ">
<a href="http://www.jobbole.com/">首页</a>&nbsp;&nbsp;
<a href="http://blog.jobbole.com/">博客首页</a>&nbsp;&nbsp;
<a href="http://www.jobbole.com/about-us">关于我们</a>&nbsp;&nbsp;
<a href="http://www.jobbole.com/contact-us/">联系我们</a>&nbsp;&nbsp;
<a href="http://www.jobbole.com/contact-us/">广告投放</a>&nbsp;&nbsp;
<a href="http://www.jobbole.com/contact-us/">网站合作</a>&nbsp;&nbsp;
<a href="http://www.jobbole.com/terms-of-use/">使用条款</a>
</span> </p>
			
			</div>
			<!-- END .grid-12 -->
			
			<div class="clear"></div>
						
		</div>
		<!-- END .container -->
		
	</div>
	<!-- END #bottom -->
	
</footer>
<!-- END footer -->


	

<!-- Generated in 0.629 seconds. (293 q) -->

	
<!-- WP SyntaxHighlighter Ver.1.7.3 Begin -->
<script type="text/javascript" src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/shCore.js"></script>
<script type="text/javascript" src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/shLegacy.js"></script>
<script type="text/javascript" src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/shAutoloader.js"></script>
<script type="text/javascript" src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/shBrushAppleScript.js"></script>
<script type="text/javascript" src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/shBrushAS3.js"></script>
<script type="text/javascript" src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/shBrushBash.js"></script>
<script type="text/javascript" src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/shBrushColdFusion.js"></script>
<script type="text/javascript" src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/shBrushCpp.js"></script>
<script type="text/javascript" src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/shBrushCSharp.js"></script>
<script type="text/javascript" src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/shBrushCss.js"></script>
<script type="text/javascript" src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/shBrushDelphi.js"></script>
<script type="text/javascript" src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/shBrushDiff.js"></script>
<script type="text/javascript" src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/shBrushErlang.js"></script>
<script type="text/javascript" src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/shBrushJava.js"></script>
<script type="text/javascript" src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/shBrushJavaFX.js"></script>
<script type="text/javascript" src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/shBrushJScript.js"></script>
<script type="text/javascript" src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/shBrushPerl.js"></script>
<script type="text/javascript" src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/shBrushPhp.js"></script>
<script type="text/javascript" src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/shBrushPlain.js"></script>
<script type="text/javascript" src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/shBrushPowerShell.js"></script>
<script type="text/javascript" src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/shBrushPython.js"></script>
<script type="text/javascript" src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/shBrushRuby.js"></script>
<script type="text/javascript" src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/shBrushSass.js"></script>
<script type="text/javascript" src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/shBrushScala.js"></script>
<script type="text/javascript" src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/shBrushSql.js"></script>
<script type="text/javascript" src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/shBrushVb.js"></script>
<script type="text/javascript" src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/shBrushXml.js"></script>
<script type="text/javascript">//<![CDATA[
	SyntaxHighlighter.autoloader(
	"applescript	http://blog.jobbole.com/wp-content/plugins/wp-syntaxhighlighter/syntaxhighlighter3/scripts/shBrushAppleScript.js?ver=3.0"
	,"as3 actionscript3	http://blog.jobbole.com/wp-content/plugins/wp-syntaxhighlighter/syntaxhighlighter3/scripts/shBrushAS3.js?ver=3.0"
	,"bash shell	http://blog.jobbole.com/wp-content/plugins/wp-syntaxhighlighter/syntaxhighlighter3/scripts/shBrushBash.js?ver=3.0"
	,"cf coldfusion	http://blog.jobbole.com/wp-content/plugins/wp-syntaxhighlighter/syntaxhighlighter3/scripts/shBrushColdFusion.js?ver=3.0"
	,"cpp c	http://blog.jobbole.com/wp-content/plugins/wp-syntaxhighlighter/syntaxhighlighter3/scripts/shBrushCpp.js?ver=3.0"
	,"c# c-sharp csharp	http://blog.jobbole.com/wp-content/plugins/wp-syntaxhighlighter/syntaxhighlighter3/scripts/shBrushCSharp.js?ver=3.0"
	,"css	http://blog.jobbole.com/wp-content/plugins/wp-syntaxhighlighter/syntaxhighlighter3/scripts/shBrushCss.js?ver=3.0"
	,"delphi pas pascal	http://blog.jobbole.com/wp-content/plugins/wp-syntaxhighlighter/syntaxhighlighter3/scripts/shBrushDelphi.js?ver=3.0"
	,"diff patch	http://blog.jobbole.com/wp-content/plugins/wp-syntaxhighlighter/syntaxhighlighter3/scripts/shBrushDiff.js?ver=3.0"
	,"erl erlang	http://blog.jobbole.com/wp-content/plugins/wp-syntaxhighlighter/syntaxhighlighter3/scripts/shBrushErlang.js?ver=3.0"
	,"java	http://blog.jobbole.com/wp-content/plugins/wp-syntaxhighlighter/syntaxhighlighter3/scripts/shBrushJava.js?ver=3.0"
	,"jfx javafx	http://blog.jobbole.com/wp-content/plugins/wp-syntaxhighlighter/syntaxhighlighter3/scripts/shBrushJavaFX.js?ver=3.0"
	,"js jscript javascript	http://blog.jobbole.com/wp-content/plugins/wp-syntaxhighlighter/syntaxhighlighter3/scripts/shBrushJScript.js?ver=3.0"
	,"perl pl	http://blog.jobbole.com/wp-content/plugins/wp-syntaxhighlighter/syntaxhighlighter3/scripts/shBrushPerl.js?ver=3.0"
	,"php	http://blog.jobbole.com/wp-content/plugins/wp-syntaxhighlighter/syntaxhighlighter3/scripts/shBrushPhp.js?ver=3.0"
	,"plain text	http://blog.jobbole.com/wp-content/plugins/wp-syntaxhighlighter/syntaxhighlighter3/scripts/shBrushPlain.js?ver=3.0"
	,"ps powershell	http://blog.jobbole.com/wp-content/plugins/wp-syntaxhighlighter/syntaxhighlighter3/scripts/shBrushPowerShell.js?ver=3.0"
	,"py python	http://blog.jobbole.com/wp-content/plugins/wp-syntaxhighlighter/syntaxhighlighter3/scripts/shBrushPython.js?ver=3.0"
	,"rails ror ruby rb	http://blog.jobbole.com/wp-content/plugins/wp-syntaxhighlighter/syntaxhighlighter3/scripts/shBrushRuby.js?ver=3.0"
	,"sass scss	http://blog.jobbole.com/wp-content/plugins/wp-syntaxhighlighter/syntaxhighlighter3/scripts/shBrushSass.js?ver=3.0"
	,"scala	http://blog.jobbole.com/wp-content/plugins/wp-syntaxhighlighter/syntaxhighlighter3/scripts/shBrushScala.js?ver=3.0"
	,"sql	http://blog.jobbole.com/wp-content/plugins/wp-syntaxhighlighter/syntaxhighlighter3/scripts/shBrushSql.js?ver=3.0"
	,"vb vbnet	http://blog.jobbole.com/wp-content/plugins/wp-syntaxhighlighter/syntaxhighlighter3/scripts/shBrushVb.js?ver=3.0"
	,"xml xhtml xslt html	http://blog.jobbole.com/wp-content/plugins/wp-syntaxhighlighter/syntaxhighlighter3/scripts/shBrushXml.js?ver=3.0"
	);
	SyntaxHighlighter.defaults['auto-links'] = false;
	SyntaxHighlighter.defaults['quick-code'] = true;
	SyntaxHighlighter.defaults['title'] = '';
	SyntaxHighlighter.defaults['class-name'] = 'notranslate';
	SyntaxHighlighter.defaults['collapse'] = false;
	SyntaxHighlighter.defaults['first-line'] = 1;
	SyntaxHighlighter.defaults['gutter'] = true;
	SyntaxHighlighter.defaults['pad-line-numbers'] = false;
	SyntaxHighlighter.defaults['smart-tabs'] = true;
	SyntaxHighlighter.defaults['tab-size'] = 4;
	SyntaxHighlighter.defaults['toolbar'] = false;
 SyntaxHighlighter.config.stripBrs = true;
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = "Can't find brush for: ";
	SyntaxHighlighter.config.strings.brushNotHtmlScript = "Brush wasn't configured for html-script option: ";
	SyntaxHighlighter.all();
	dp.SyntaxHighlighter.HighlightAll('code')
//]]></script>
<!-- WP SyntaxHighlighter Ver.1.7.3 End -->
<!-- Lightbox Plus ColorBox v2.6/1.3.32 - 2013.01.24 - Message: 0-->
<script type="text/javascript">
jQuery(document).ready(function($){
  $("a[rel*=lightbox]").colorbox({speed:450,initialWidth:"300",initialHeight:"100",opacity:0.8,loop:false,scrolling:false,escKey:false,arrowKey:false,top:false,right:false,bottom:false,left:false});
});
</script>
<script type="text/javascript" src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/ck-karma.js"></script>
<script type="text/javascript">
/* <![CDATA[ */
var viewsCacheL10n = {"admin_ajax_url":"http:\/\/blog.jobbole.com\/wp-admin\/admin-ajax.php","post_id":"72850"};
/* ]]> */
</script>
<script type="text/javascript" src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/postviews-cache.js"></script>
<script type="text/javascript">
/* <![CDATA[ */
var pollsL10n = {"ajax_url":"http:\/\/blog.jobbole.com\/wp-admin\/admin-ajax.php","text_wait":"Your last request is still being processed. Please wait a while ...","text_valid":"Please choose a valid poll answer.","text_multiple":"\u6700\u591a\u53ea\u5141\u8bb8\u6295\u7684\u9009\u9879\uff1a","show_loading":"1","show_fading":"1"};
/* ]]> */
</script>
<script type="text/javascript" src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/polls-js.js"></script>
<script type="text/javascript" src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/ready.js"></script>
<script type="text/javascript" src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/easing.js"></script>
<script type="text/javascript" src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/superfish.js"></script>
<script type="text/javascript" src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/validate.js"></script>
<script type="text/javascript" src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/touchwipe.js"></script>
<script type="text/javascript" src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/caroufredsel.js"></script>
<script type="text/javascript" src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/flexslider.js"></script>
<script type="text/javascript" src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/jplayer.js"></script>
<script type="text/javascript" src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/fitvids.js"></script>
<script type="text/javascript" src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/selectnav.js"></script>
<script type="text/javascript" src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/effects.js"></script>
<script type="text/javascript" src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/jquery.colorbox.1.3.32.js"></script>


<div id="full-btm" style="position:fixed; left:50%; top:550px; margin-left:425px;  z-index:100; text-align:center; cursor:pointer;">
<a><img src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/back-btm.png" width="20" border="0" alt="跳到底部" title="跳到底部"></a>
</div>

<script type="text/javascript">
jQuery('#full-btm').click(function(){
    jQuery('html, body').animate({scrollTop:jQuery(document).height()}, 'slow');
    return false;
});
</script>

<div id="full-top" style="position:fixed; left:50%; top:520px; margin-left:475px; z-index:100; text-align:center; cursor:pointer;">
<a><img src="./可视化对比十多种排序算法（C#版） - 博客 - 伯乐在线_files/back-top.png" width="20" border="0" alt="返回顶部" title="返回顶部"></a>
</div>

<script type="text/javascript">
jQuery('#full-top').click(function(){
    jQuery('html, body').animate({scrollTop:0}, 'slow');
    return false;
});
</script>


<script type="text/javascript">//<![CDATA[
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-15621043-1']);
_gaq.push(['_setCustomVar',1,'logged-in','administrator',1],['_trackPageview']);
(function () {
	var ga = document.createElement('script');
	ga.type = 'text/javascript';
	ga.async = true;
	ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
	var s = document.getElementsByTagName('script')[0];
	s.parentNode.insertBefore(ga, s);
})();
//]]></script>


<!-- END body -->


<!-- END html --><div id="cboxOverlay" style="display: none;"></div><div id="colorbox" class="" style="display: none;"><div id="cboxWrapper"><div><div id="cboxTopLeft" style="float: left;"></div><div id="cboxTopCenter" style="float: left;"></div><div id="cboxTopRight" style="float: left;"></div></div><div style="clear: left;"><div id="cboxMiddleLeft" style="float: left;"></div><div id="cboxContent" style="float: left;"><div id="cboxTitle" style="float: left;"></div><div id="cboxCurrent" style="float: left;"></div><div id="cboxNext" style="float: left;"></div><div id="cboxPrevious" style="float: left;"></div><div id="cboxSlideshow" style="float: left;"></div><div id="cboxClose" style="float: left;"></div></div><div id="cboxMiddleRight" style="float: left;"></div></div><div style="clear: left;"><div id="cboxBottomLeft" style="float: left;"></div><div id="cboxBottomCenter" style="float: left;"></div><div id="cboxBottomRight" style="float: left;"></div></div></div><div style="position: absolute; width: 9999px; visibility: hidden; display: none;"></div></div></body></html>